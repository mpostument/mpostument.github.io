<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Beginner on Maksym Postument</title><link>/ua/tags/beginner/</link><description>Recent content in Beginner on Maksym Postument</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 20 Feb 2022 20:37:23 +0200</lastBuildDate><atom:link href="/ua/tags/beginner/index.xml" rel="self" type="application/rss+xml"/><item><title>Using Postgres With Golang</title><link>/ua/2022/02/20/connecting-to-postgres-with-golang/</link><pubDate>Sun, 20 Feb 2022 20:37:23 +0200</pubDate><guid>/ua/2022/02/20/connecting-to-postgres-with-golang/</guid><description>Привіт!
Сьогодні подивимось як за допомогою golang можна під&amp;rsquo;єднатися до postgres бази даних та виконувати запити. Для роботи з базою даних будемо використовувати github.com/jackc/pgx.
Розпочнемо з ініціалізації модуля та встановлення драйвера для бази.
go mod init go get github.com/jackc/pgx/v4 Після цього pgx стане доступний для використання в коді.
Для тестової бази даних я використаю docker, але це може бути який тип інсталяції. Для цього потрібно створити файл docker-compose.yml з контентом:</description><content>&lt;p>Привіт!&lt;/p>
&lt;p>Сьогодні подивимось як за допомогою golang можна під&amp;rsquo;єднатися до postgres бази даних та виконувати запити.
Для роботи з базою даних будемо використовувати &lt;code>github.com/jackc/pgx&lt;/code>.&lt;/p>
&lt;p>Розпочнемо з ініціалізації модуля та встановлення драйвера для бази.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">go mod init
go get github.com/jackc/pgx/v4
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Після цього &lt;code>pgx&lt;/code> стане доступний для використання в коді.&lt;/p>
&lt;p>Для тестової бази даних я використаю docker, але це може бути який тип інсталяції.
Для цього потрібно створити файл &lt;code>docker-compose.yml&lt;/code> з контентом:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yml" data-lang="yml">&lt;span style="color:#f92672">version&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;3&amp;#39;&lt;/span>
&lt;span style="color:#f92672">services&lt;/span>:
&lt;span style="color:#f92672">postgres&lt;/span>:
&lt;span style="color:#f92672">image&lt;/span>: &lt;span style="color:#ae81ff">postgres&lt;/span>
&lt;span style="color:#f92672">tty&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;span style="color:#f92672">restart&lt;/span>: &lt;span style="color:#ae81ff">always&lt;/span>
&lt;span style="color:#f92672">ports&lt;/span>:
- &lt;span style="color:#e6db74">&amp;#34;5432:5432&amp;#34;&lt;/span>
&lt;span style="color:#f92672">environment&lt;/span>:
- &lt;span style="color:#ae81ff">POSTGRES_PASSWORD=postgres&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>І виконати команду &lt;code>docker-compose up -d&lt;/code>. Docker-compose i docker мають бути встановленні.
База даних готова для роботи, і тепер можна приступити до написання коду.&lt;/p>
&lt;p>Розпочнемо з підключення до бази даних. Спочатку створюємо конфігурацію &lt;code>cfg&lt;/code> в якій буде вказано адрес, порт, користувач, пароль та база даних до якої підключаємось. Оскільки в мене база даних працює локально то як хост я вказую &lt;code>localhost&lt;/code>.Коли конфігурація готова викликаємо &lt;code>pgx.Connect(cfg)&lt;/code> для створення підключення. Після закінчення роботи з базою підключення потрібно закрити тому додамо &lt;code>defer conn.Close()&lt;/code> і перевіряємо помилки. Також щоб перевірити що база даних відповідає викличемо &lt;code>conn.Ping(context.Background())&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#f92672">package&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> (
&lt;span style="color:#e6db74">&amp;#34;context&amp;#34;&lt;/span>
&lt;span style="color:#e6db74">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;span style="color:#e6db74">&amp;#34;log&amp;#34;&lt;/span>
&lt;span style="color:#e6db74">&amp;#34;os&amp;#34;&lt;/span>
&lt;span style="color:#e6db74">&amp;#34;github.com/jackc/pgx&amp;#34;&lt;/span>
)
&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>() {
&lt;span style="color:#a6e22e">cfg&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">pgx&lt;/span>.&lt;span style="color:#a6e22e">ConnConfig&lt;/span>{
&lt;span style="color:#a6e22e">Host&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;localhost&amp;#34;&lt;/span>,
&lt;span style="color:#a6e22e">Port&lt;/span>: &lt;span style="color:#ae81ff">5432&lt;/span>,
&lt;span style="color:#a6e22e">User&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;postgres&amp;#34;&lt;/span>,
&lt;span style="color:#a6e22e">Password&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;postgres&amp;#34;&lt;/span>,
&lt;span style="color:#a6e22e">Database&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;postgres&amp;#34;&lt;/span>,
}
&lt;span style="color:#a6e22e">conn&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">pgx&lt;/span>.&lt;span style="color:#a6e22e">Connect&lt;/span>(&lt;span style="color:#a6e22e">cfg&lt;/span>)
&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> {
&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Fprintf&lt;/span>(&lt;span style="color:#a6e22e">os&lt;/span>.&lt;span style="color:#a6e22e">Stderr&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;Unable to connect to database: %v\n&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span>)
&lt;span style="color:#a6e22e">log&lt;/span>.&lt;span style="color:#a6e22e">Fatalf&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Connect to database failed: %v\n&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span>)
}
&lt;span style="color:#66d9ef">defer&lt;/span> &lt;span style="color:#a6e22e">conn&lt;/span>.&lt;span style="color:#a6e22e">Close&lt;/span>()
&lt;span style="color:#a6e22e">err&lt;/span> = &lt;span style="color:#a6e22e">conn&lt;/span>.&lt;span style="color:#a6e22e">Ping&lt;/span>(&lt;span style="color:#a6e22e">context&lt;/span>.&lt;span style="color:#a6e22e">Background&lt;/span>())
&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> {
&lt;span style="color:#a6e22e">log&lt;/span>.&lt;span style="color:#a6e22e">Fatalf&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Ping Failed: %v\n&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span>)
}
}
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Можна тепер почати робити запити. Для початку створимо нову таблицю і запишемо в неї дані. Для виклику запитів які нічого не повертають використовується метод &lt;code>Exec&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go"> &lt;span style="color:#a6e22e">_&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span> = &lt;span style="color:#a6e22e">conn&lt;/span>.&lt;span style="color:#a6e22e">Exec&lt;/span>(&lt;span style="color:#e6db74">`
&lt;/span>&lt;span style="color:#e6db74"> CREATE TABLE IF NOT EXISTS users(
&lt;/span>&lt;span style="color:#e6db74"> id SERIAL PRIMARY KEY,
&lt;/span>&lt;span style="color:#e6db74"> name TEXT,
&lt;/span>&lt;span style="color:#e6db74"> email TEXT UNIQUE NOT NULL
&lt;/span>&lt;span style="color:#e6db74"> );
&lt;/span>&lt;span style="color:#e6db74"> `&lt;/span>)
&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> {
&lt;span style="color:#a6e22e">log&lt;/span>.&lt;span style="color:#a6e22e">Fatalln&lt;/span>(&lt;span style="color:#a6e22e">err&lt;/span>)
}
&lt;span style="color:#a6e22e">name&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;TestUser1&amp;#34;&lt;/span>
&lt;span style="color:#a6e22e">email&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;testuser@gmail.com&amp;#34;&lt;/span>
&lt;span style="color:#a6e22e">_&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span> = &lt;span style="color:#a6e22e">conn&lt;/span>.&lt;span style="color:#a6e22e">Exec&lt;/span>(&lt;span style="color:#e6db74">`
&lt;/span>&lt;span style="color:#e6db74"> INSERT INTO users(name, email)
&lt;/span>&lt;span style="color:#e6db74"> VALUES ($1, $2);
&lt;/span>&lt;span style="color:#e6db74"> `&lt;/span>, &lt;span style="color:#a6e22e">name&lt;/span>, &lt;span style="color:#a6e22e">email&lt;/span>)
&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> {
&lt;span style="color:#a6e22e">log&lt;/span>.&lt;span style="color:#a6e22e">Fatalln&lt;/span>(&lt;span style="color:#a6e22e">err&lt;/span>)
}
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Дані створено, і можна спробувати їх прочитати. Якщо вертається з бази один запис, то можна використати метод &lt;code>QueryRow&lt;/code>, якщо багато, то &lt;code>Query&lt;/code>. Також для того, щоб прочитати дані потрібна структура, в нас це буде структура &lt;code>User&lt;/code> яка буде мати такі самі параметри як і поля в таблиці.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#66d9ef">type&lt;/span> &lt;span style="color:#a6e22e">User&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span> {
&lt;span style="color:#a6e22e">Id&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>
&lt;span style="color:#a6e22e">Name&lt;/span> &lt;span style="color:#66d9ef">string&lt;/span>
&lt;span style="color:#a6e22e">Email&lt;/span> &lt;span style="color:#66d9ef">string&lt;/span>
}
&lt;/code>&lt;/pre>&lt;/div>&lt;p>І сам запит щоб отримати дані&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go"> &lt;span style="color:#a6e22e">user&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">User&lt;/span>{}
&lt;span style="color:#a6e22e">err&lt;/span> = &lt;span style="color:#a6e22e">conn&lt;/span>.&lt;span style="color:#a6e22e">QueryRow&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;SELECT * FROM users WHERE name=$1;&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">name&lt;/span>).&lt;span style="color:#a6e22e">Scan&lt;/span>(&lt;span style="color:#f92672">&amp;amp;&lt;/span>&lt;span style="color:#a6e22e">user&lt;/span>.&lt;span style="color:#a6e22e">Id&lt;/span>, &lt;span style="color:#f92672">&amp;amp;&lt;/span>&lt;span style="color:#a6e22e">user&lt;/span>.&lt;span style="color:#a6e22e">Name&lt;/span>, &lt;span style="color:#f92672">&amp;amp;&lt;/span>&lt;span style="color:#a6e22e">user&lt;/span>.&lt;span style="color:#a6e22e">Email&lt;/span>)
&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> {
&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#a6e22e">err&lt;/span>)
&lt;span style="color:#66d9ef">return&lt;/span>
}
&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#a6e22e">user&lt;/span>)
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ось так за допомогою &lt;code>pgx&lt;/code> легко можна читати та записувати дані. &lt;code>Pgx&lt;/code> також може використовувати як драйвер до вбудованого &lt;code>sql&lt;/code> пакета&lt;/p></content></item></channel></rss>
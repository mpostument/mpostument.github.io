<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Codeship on mpostument.com</title><link>/ua/tags/codeship/</link><description>Recent content in Codeship on mpostument.com</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 16 Sep 2020 20:24:40 +0300</lastBuildDate><atom:link href="/ua/tags/codeship/index.xml" rel="self" type="application/rss+xml"/><item><title>Deploy to ec2 with codedship</title><link>/ua/2020/09/16/deploy-to-ec2-with-codeship/</link><pubDate>Wed, 16 Sep 2020 20:24:40 +0300</pubDate><guid>/ua/2020/09/16/deploy-to-ec2-with-codeship/</guid><description>Привіт!
Сьогодні я хочу показати як можна задеплоїти код на AWS EC2 за допомогою CodeShip Basic. Для цього я використаю інтеграцію Codeship з AWS CodeDeploy.
CodeShip Configuration Спочатку потрібо добавити репозиторій в CodeShip і перейти в вкладу Deploy. І добавити branch з якої відбувається деплой на ec2. В моєму випадку branch master вже є добавлена. Після того як branch добавлено потрібно проскролити в низ до секції Deployment. І вибрати CodeDeploy Одразу зявиться наступна форма Тут потрібно ввести Access and Secret Keys користувача який буде здійснювати деплой.</description><content>&lt;p>Привіт!&lt;/p>
&lt;p>Сьогодні я хочу показати як можна задеплоїти код на AWS EC2 за допомогою CodeShip Basic.
Для цього я використаю інтеграцію Codeship з AWS CodeDeploy.&lt;/p>
&lt;h2 id="codeship-configuration">CodeShip Configuration&lt;/h2>
&lt;p>Спочатку потрібо добавити репозиторій в CodeShip і перейти в вкладу Deploy.
&lt;img src="https://i.imgur.com/Zz2v8aZ.png" alt="Coeship1">&lt;/p>
&lt;p>І добавити branch з якої відбувається деплой на ec2. В моєму випадку branch master вже є добавлена.
Після того як branch добавлено потрібно проскролити в низ до секції Deployment. І вибрати CodeDeploy
&lt;img src="https://i.imgur.com/KVCmUDn.png" alt="Codeship2">&lt;/p>
&lt;p>Одразу зявиться наступна форма
&lt;img src="https://i.imgur.com/rfdRxKl.png" alt="CodeshipForm3">
Тут потрібно ввести Access and Secret Keys користувача який буде здійснювати деплой. Користувач має мати доступ до s3 та CodeDeploy.
В регіон вказати ваш AWS Region де знаходится аплікація. Для мене це us-east-1.&lt;br>
&lt;code>Application&lt;/code>, &lt;code>GroupName&lt;/code> потрібно буде створити в AWS. Значення варто вибирати таке щоб було зрозуміло яка аплікаця деплоїться. &lt;code>S3 Bucket&lt;/code> може бути як загальний бакет куди будуть здійснювати усі деплойменти черех codeship або обрати індивідуальне ім&amp;rsquo;я для однієї аплікації. В моєму випадку це CodeShipEc2Deployment.&lt;br>
І останє це &lt;code>Config Name&lt;/code> потрібно вказати назву конфігурації в CodeDeploy. Я візьму стандартну &lt;code>CodeDeployDefault.AllAtOnce&lt;/code>. Це означає що деплой буде відбуватись одразу на всі ec2 інстанси&lt;/p>
&lt;p>Тепер з CodeShip закінчено і можна приступати до налаштування AWS.&lt;/p>
&lt;h2 id="codedeploy-configuration">CodeDeploy Configuration&lt;/h2>
&lt;p>Відкрите CodeDeploy сервіс в AWS.&lt;br>
&lt;img src="https://i.imgur.com/cTv6l3Y.png" alt="CodeDeploy">
В секції Deployment знайдіть Applications&lt;br>
&lt;img src="https://i.imgur.com/BAZ6E6d.png" alt="Applications">&lt;br>
Натисніть Create Application. Введіть назву таку ж як і в Codeship в секції &lt;code>Application&lt;/code>. Як Compute Platform оберіть EC2
&lt;img src="https://i.imgur.com/zAXUxuF.png" alt="CreateApplication">
Відкрийте тільки що створену &lt;code>Application&lt;/code> і в &lt;code>Deployment Groups&lt;/code> оберіть &lt;code>Create Deployment Group&lt;/code>&lt;br>
&lt;img src="https://i.imgur.com/5wfA0VU.png" alt="DeploymentGroup">
В &lt;code>Deployment group name&lt;/code> потрібно вкзати таку ж назву яка була вказана в CodeShip.
В &lt;code>ServiceRole&lt;/code> потрібно обрати роль яка дозволить здійснювати деплой на ec2. Хороший приклад ролі можна знайти &lt;a href="https://docs.aws.amazon.com/codedeploy/latest/userguide/getting-started-create-service-role.html">тут&lt;/a>.&lt;/p>
&lt;p>В &lt;code>Environment configuration&lt;/code> оберіть ec2. Далі потрібно вказати який tag використовуватись для фільтра ec2. Наприклад це може буде Key=Name, Value=ProductionApplication. Тут можна використовувати будь які теги які є на вашому ec2 на який має здійснювати деплоймент.&lt;br>
&lt;img src="https://i.imgur.com/ffGKRQV.png" alt="Ec2Filter">&lt;/p>
&lt;h2 id="ec2-configuration">Ec2 Configuration&lt;/h2>
&lt;p>Для ec2 буде потрібна ще одна роль. Які доступи вона має мати можна знайти &lt;a href="https://docs.aws.amazon.com/codedeploy/latest/userguide/instances-ec2-configure.html#instances-ec2-configure-2-verify-instance-profile-permissions">тут&lt;/a>&lt;/p>
&lt;p>Після того як роль створена її потрібно заасайнити на ec2 інстанс. Для цього оберіть потрібний ec2. Натисніть правою кнопкою миші і виберіть Attach Role
&lt;img src="https://i.imgur.com/uaIUcyg.png" alt="AttachRole">
В спику знайдіть вище створену роль.&lt;br>
Тепер на ec2 інстанс потрібно поставити CodeDeploy Agent. Для цього підключіться до сервера по ssh
&lt;code>ssh -i private_key ec2-user@IP&lt;/code>. Далі буде приклад для AmazonLinux. Якщо в вас інша OS команди можна знайти &lt;a href="https://docs.aws.amazon.com/codedeploy/latest/userguide/codedeploy-agent-operations-install-cli.html">тут&lt;/a>.&lt;/p>
&lt;ul>
&lt;li>Скачати інсталяцію &lt;code>wget https://aws-codedeploy-us-east-1.s3.us-east-1.amazonaws.com/latest/install&lt;/code>&lt;/li>
&lt;li>Надати пермішини &lt;code>sudo chmod +x install&lt;/code>&lt;/li>
&lt;li>Встановити &lt;code>sudo ./install auto&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>Перевірити чи агент запущено можна командою &lt;code>sudo service codedeploy-agent status&lt;/code>. Результат має бути орієнтовно такий &lt;code>The AWS CodeDeploy agent is running as PID 32466&lt;/code>.&lt;br>
Також потрібно створити папку в які буде знаходитись аплікація &lt;code>mkdir /opt/application&lt;/code> і дати пермішин для користувача. Я викоистовую ec2-user &lt;code>chown ec2-user:ec2-user /opt/application&lt;/code>&lt;/p>
&lt;h2 id="deployment-script">Deployment Script&lt;/h2>
&lt;p>В корені репозиторія потрібно створити файл який має називатись &lt;code>appspec.yml&lt;/code>. Тут можна знайти всі опції які підтримує цей файл - &lt;a href="https://docs.aws.amazon.com/codedeploy/latest/userguide/reference-appspec-file.html">AWS&lt;/a>.&lt;/p>
&lt;p>Ось приклад мого файла:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yml" data-lang="yml">&lt;span style="color:#f92672">version&lt;/span>: &lt;span style="color:#ae81ff">0.0&lt;/span>
&lt;span style="color:#f92672">os&lt;/span>: &lt;span style="color:#ae81ff">linux&lt;/span>
&lt;span style="color:#f92672">files&lt;/span>:
- &lt;span style="color:#f92672">source&lt;/span>: &lt;span style="color:#ae81ff">/&lt;/span>
&lt;span style="color:#f92672">destination&lt;/span>: &lt;span style="color:#ae81ff">/opt/application&lt;/span>
&lt;span style="color:#f92672">permissions&lt;/span>:
- &lt;span style="color:#f92672">object&lt;/span>: &lt;span style="color:#ae81ff">/opt/application&lt;/span>
&lt;span style="color:#f92672">owner&lt;/span>: &lt;span style="color:#ae81ff">ec2-user&lt;/span>
&lt;span style="color:#f92672">group&lt;/span>: &lt;span style="color:#ae81ff">ec2-user&lt;/span>
&lt;span style="color:#f92672">hooks&lt;/span>:
&lt;span style="color:#f92672">AfterInstall&lt;/span>:
- &lt;span style="color:#f92672">location&lt;/span>: &lt;span style="color:#ae81ff">ops/deploybuild.sh&lt;/span>
&lt;span style="color:#f92672">runas&lt;/span>: &lt;span style="color:#ae81ff">ec2-user&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>version&lt;/code> має стандартне значення і міняти його не потрібно. 0.0 Єдине значення як підтримується
&lt;code>os&lt;/code> може бути двох значення windows або linux, оскільки в мене OS на EC2 AmazonLinux я обираю linux
&lt;code>files&lt;/code> вказує які файли потрібно копіювати на сервер під час деплойменту. &lt;code>source: /&lt;/code> означає копіювати всі файли. &lt;code>destination&lt;/code> куди копіювати.&lt;br>
В &lt;code>permissions&lt;/code> зазначено які пермішини мають мати щойно скопійовані файли.&lt;br>
В &lt;code>hooks&lt;/code> секції відбувається конфігурація аплікації. Я використовую &lt;code>AfterInstall&lt;/code> hook. Це означає що скрипт буде запущено після &lt;code>Install&lt;/code> кроку. Під час &lt;code>Install&lt;/code> кроку файли копіюються на сервер. В &lt;code>location&lt;/code> вказано який скрипт запускати та від його корисувача. &lt;code>runas&lt;/code> означає що скрипт буде викликатись від імені користувача. По дефолту code-deploy agent запускається від рута і runas на цьому етапі переключить на ec2-user. Також можна поміняти щоб code-deploy agent запускався одарзу від ec2-user.&lt;/p>
&lt;p>Далі нам потрібен деплой скрипт. В репозиторії я створив папку ops оскільки шлях до мого скрипта &lt;code>- location: ops/deploybuild.sh&lt;/code>. І в цій папку створив скрипт &lt;code>deploybuild.sh&lt;/code>.
В мене node.js аплікації для якою потрібно зробити yarn install та npm start. Я це добавлю в скрипт&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#75715e">#!/usr/bin/env bash
&lt;/span>&lt;span style="color:#75715e">&lt;/span>cd /opt/application
yarn --ignore-engines
cd examples/demo-app/
&lt;span style="color:#f92672">(&lt;/span>npm run start-prod&lt;span style="color:#f92672">)&lt;/span>&amp;amp;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Це базовий скрипт як можна запустити node аплікацію. Для продакшина варто використовувати pm2 для старту js аплікацій.
Тепер залишилось зробити коміт в master branch і codedeploy запуститься автоматично&lt;/p></content></item></channel></rss>
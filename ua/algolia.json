[{"categories":["Golang"],"date":"2022-11-08T19:54:39+02:00","description":"Explore basic types in golang","href":"https://mpostument.com/ua/2022/11/08/go-basic-types/","keywords":["Go","VSCode","Beginner","Golang"],"lang":"ua","lastmod":1667930079,"objectID":"fedf540f19c019ac6f308e4de796c33e","section":"post","summary":"Привіт!\nВ цьому пості розглянемо базові типи даних в golang.\nBool Перший тип який розглянемо це bool. В цьому типу можливі лише два значення це true та false. Створити параметр типу bool можна в один за наступних способів:\nvar isActive bool var isEnabled = false isLoaded := true В другому і третьому варіанті ми одразу задаємо значення яке буде мати параметр. В першому ми нічого не вказуємо отже буде використовуватись нульове значення.","tags":["Go","Beginner"],"title":"Basic Types in Go","wordcount":822},{"categories":["GameMaker"],"date":"2022-11-06T13:30:58+02:00","description":"Learn how to use if/else and case statements in game maker","href":"https://mpostument.com/ua/2022/11/06/conditions/","keywords":["GameMaker","Beginner","GameDev","Indie","PixelArt"],"lang":"ua","lastmod":1667734258,"objectID":"ba775de7844e2176e2daaf1b1db3c31a","section":"post","summary":"Привіт!\nРозглянемо умови в Game Maker. Умови можна створювати як за допомогою if/else так і switch. Розглянемо обидва варіанти.\nIf/Else В Game Maker if/else умови такі ж як і в інших мовах програмування. Сам блок виглядає так:\nif (\u0026lt;expression\u0026gt;) { \u0026lt;statement\u0026gt;; } else { \u0026lt;statement\u0026gt;; } Наприклад ми можемо мати на перевірку здоров\u0026rsquo;я нашого об\u0026rsquo;єкта. Наприклад якщо hp \u0026lt; 100 то знищуємо об\u0026rsquo;єкт. Для того щоб це зробити використаємо новий типу івенту який називається Step.","tags":["GameMaker","Beginner","GameDev"],"title":"Game Maker - Conditions","wordcount":456},{"categories":["GameMaker"],"date":"2022-11-04T19:17:15+02:00","description":"Let's explore coordinates in game maker","href":"https://mpostument.com/ua/2022/11/04/coordinates/","keywords":["GameMaker","Beginner","GameDev","Indie","PixelArt"],"lang":"ua","lastmod":1667582235,"objectID":"21b9a780998a83ee0da5dec77a01749b","section":"post","summary":"Привіт!\nРозглянемо як працюють координати в Game Maker.\nRoom coordinates Відкрию кімнату (Room1) і якщо навести в мишку в лівий верхній куток то в цьому місці будуть координати x = 0, y = 0. Якщо рухатись вправо/вліво то координата x буде змінюватись, а якщо верх/вниз то буде змінюватись координата y.\nЦе основна інформація яку потрібно знати по координатах. А тепер спробуємо додати об\u0026rsquo;єкт і перемістити його\nObject coordinates Об\u0026rsquo;єкт може бути добавлений в кімнату по будь яких доступних координатах.","tags":["GameMaker","Beginner","GameDev"],"title":"Game Maker - Coordinates","wordcount":526},{"categories":["Golang"],"date":"2022-11-02T18:00:24+02:00","description":"Let's learn about variables in golang","href":"https://mpostument.com/ua/2022/11/02/go-variables/","keywords":["Go","VSCode","Beginner","Golang"],"lang":"ua","lastmod":1667404824,"objectID":"770efeb9f280b49250aa8d0ef4a896d2","section":"post","summary":"Привіт!\nСьогодні поговоримо про параметри в golang. Є три варіанти як можна створити параметри розглянемо кожен з них.\nVar keyword Перший варіант це створення параметра за допомогою ключового слова var. Так можна створити параметр який не буде мати значення (буде мати початкове значення для кожного типу). Виглядає це так var PARAM_NAME PARAM_TYPE наприклад var level int\npackage main import \u0026#34;fmt\u0026#34; func main() { var level int fmt.Println(level) } $ go run main.","tags":["Go","Beginner"],"title":"Go Variables","wordcount":747},{"categories":["GameMaker"],"date":"2022-10-30T18:48:32+02:00","description":"Let's learn Game Maker. In this article i will show what is variables in Game Maker and how to use them","href":"https://mpostument.com/ua/2022/10/30/variables/","keywords":["GameMaker","Beginner","GameDev","Indie","PixelArt"],"lang":"ua","lastmod":1667148512,"objectID":"856985210249e397df91c85d5a209418","section":"post","summary":"Привіт!\nПоринемо у світ геймдеву з Game Maker 2. І сьогодні розпочнемо з параметрів в Game Maker. Створимо новий проект вибравши New Blank і назву його variables.\nObject Параметри можна додавати до об\u0026rsquo;єктів. Об\u0026rsquo;єктом може бути практично будь чим починаю від героя і ворогів закінчуючи об\u0026rsquo;єктами які керують якоюсь логікою в грі. Для того щоб створити об\u0026rsquo;єкт потрібно натиснути правою кнопкою миші в Assets Browser на теці Objects і обрати Create -\u0026gt; Object.","tags":["GameMaker","Beginner","GameDev"],"title":"Game Maker - Variables","wordcount":541},{"categories":["Golang"],"date":"2022-10-28T21:31:30+03:00","description":"Install golang and configure vscode for better codding experience","href":"https://mpostument.com/ua/2022/10/28/setup-go/","keywords":["Go","VSCode","Beginner","Golang"],"lang":"ua","lastmod":1666981890,"objectID":"e87e5f8d641ea21e8241cace567a7217","section":"post","summary":"Привіт!\nЦим постом починаю серію постів про golang. Конкретно в цьому встановимо golang та налаштуємо vscode.\nInstall go Актуальну версію golang можна завантажити на офіційному сайті. Я використовую linux тому завантажу версію для linux\n$ wget https://go.dev/dl/go1.19.2.linux-amd64.tar.gz --2022-10-28 22:35:40-- https://go.dev/dl/go1.19.2.linux-amd64.tar.gz Resolving go.dev (go.dev)... 216.239.36.21, 216.239.34.21, 216.239.38.21, ... Connecting to go.dev (go.dev)|216.239.36.21|:443... connected. HTTP request sent, awaiting response... 302 Found Location: https://dl.google.com/go/go1.19.2.linux-amd64.tar.gz [following] --2022-10-28 22:35:40-- https://dl.google.com/go/go1.19.2.linux-amd64.tar.gz Resolving dl.google.com (dl.google.com)... 216.58.215.78, 2a00:1450:401b:810::200e Connecting to dl.","tags":["Go","Beginner"],"title":"Golang - Setting Up Development Environment","wordcount":469},{"categories":["Devops","Ansible","Beginner"],"date":"2022-10-19T17:28:26+03:00","description":"Fifth article in series about ansible. In this article, I will show how to store securely store sensitive data in ansible","href":"https://mpostument.com/ua/2022/10/19/ansible-vault/","keywords":["VSCode","Devops","Ansible","pyenv","RedHat","Beginner","virtualenv","boto3","vault","encryption"],"lang":"ua","lastmod":1666189706,"objectID":"845e2e0588628e87e507ebfce9281aab","section":"post","summary":"Part 1 - Manage Ansible Versions With pyenv\nPart 2 - Ansible Inventory\nPart 3 - Ansible Playbook\nPart 4 - Ansible Role\nПривіт!\nЩо робити якщо нам потрібно створити користувача в базі даних і безпечно зберегти його пароль в коді? Це можна здійснити за допомогою ansible vault. Ansible vault дозволяє шифрувати як і цілий файл так окремі параметри.\nEncrypted file Створимо файл в якому будуть наші параметри.\ndb_password: secure_password! admin_password: super_securee_password!","tags":["VSCode","Devops","Ansible","pyenv","RedHat","Beginner"],"title":"Ansible Vault","wordcount":605},{"categories":["Devops","Ansible","Beginner"],"date":"2022-10-15T17:49:02+03:00","description":"Fourth article in series about ansible. In this article, I will what is roles and how to use them","href":"https://mpostument.com/ua/2022/10/15/ansible-role/","keywords":["VSCode","Devops","Ansible","pyenv","RedHat","Beginner","virtualenv","boto3"],"lang":"ua","lastmod":1665845342,"objectID":"f24fc424918ac9bbedd597079a955c47","section":"post","summary":"Привіт!\nТак що таке ролі в ansible? Ролі це просто логічна організація ansible коду. Наприклад можна створити роль яка буде налаштовувати MySQL базу даних, покласти її в окремий репозиторій і викласти в відкритий доступ або поділитись з іншими командами які зможуть її перевикористовувати.\nCreate Role Так як створити роль? Можна самому створити всю потрібну структуру файлів або ж використати команду ansible-galaxy role init ROLE_NAME.\nansible-galaxy role init roles/httpd - Role roles/httpd was created successfully Я вказую roles/httpd для того щоб ansible створив теку roles.","tags":["VSCode","Devops","Ansible","pyenv","RedHat","Beginner"],"title":"Ansible Role","wordcount":1265},{"categories":["Devops","Ansible","Beginner"],"date":"2022-10-04T22:51:59+03:00","description":"Third article in series about ansible. In this article, I will show how to use playbook to create reusable code","href":"https://mpostument.com/ua/2022/10/04/ansible-playbook/","keywords":["VSCode","Devops","Ansible","pyenv","RedHat","Beginner","virtualenv","boto3"],"lang":"ua","lastmod":1664913119,"objectID":"10189f160caa4a5b84553bb3bf6b3719","section":"post","summary":"Частина 1 - Manage Ansible Versions With pyenv\nЧастина 2 - Ansible Inventory\nПривіт!\nСьогодні покажу що таке ansible-playbook і як їх створювати.\nPlaybook Ansible Playbooks це повторювана, багаторазова, систему керування конфігурацією та систему розгортання, яка добре підходить для розгортання складних програм. Якщо потрібно виконати завдання за допомогою Ansible більше одного разу, це можна зробити за допомогою playbook.\nСтворимо найпростіший playbook. В playbook потрібно вказати його назву, групу серверів на якій він буде виконуватись та самі завдання.","tags":["VSCode","Devops","Ansible","pyenv","RedHat","Beginner"],"title":"Ansible Playbook","wordcount":2353},{"categories":["Devops","Ansible","Beginner"],"date":"2022-09-27T21:39:08+03:00","description":"Second article in series about ansible. In this article i will show how use static and dynamic ansible inventory","href":"https://mpostument.com/ua/2022/09/27/ansible-inventory/","keywords":["VSCode","Devops","Ansible","pyenv","RedHat","Beginner","virtualenv","boto3"],"lang":"ua","lastmod":1664303948,"objectID":"255100548c77b388922cde582fb63c5a","section":"post","summary":"Частина 1 - Manage Ansible Versions With pyenv\nПривіт!\nСьогодні розкажу що таке inventory в ansible так яких типів він буває.\nВ ansible є два типи inventory - це static та dynamic. Static використовується коли ми на перед знаємо список серверів на яких має відпрацювати ansible. А dynamic коли цих даних наперед ми не маємо і отримуємо динамічно.\nStatic inventory Щоб використовувати static inventory достатньо просто створити файл наприклад inventory і в ньому можна вказувати ip адрес наприклад:","tags":["VSCode","Devops","Ansible","pyenv","RedHat","Beginner"],"title":"Ansible Inventory","wordcount":611},{"categories":["Devops","Beginner","AWS"],"date":"2022-09-22T22:45:30+03:00","description":"Do you want to know more about AWS EC2? Check this post and i will explain all you need to know about AWS","href":"https://mpostument.com/ua/2022/09/22/aws-101-ec2-part-1/","keywords":["VSCode","Devops","Beginner","EC2","AWS","Cloud","SRE"],"lang":"ua","lastmod":1663875930,"objectID":"383cf8b0e719505bc2893aa6c333e036","section":"post","summary":"Привіт!\nЦим посту розпочну серію про AWS, в яких покажу як використовувати різні AWS сервіси, автоматизовувати за допомогою terraform та AWS SDK. І розпочнемо з сервісу EC2.\nEC2 є основним обчислювальним компонентом AWS. На практиці EC2 полегшує життя розробникам, надаючи безпечну обчислювальну потужність у AWS зі змінним розміром. Він значно полегшує процес збільшення або зменшення масштабу, може бути інтегрований у кілька інших служб і поставляється з планом, згідно з яким ви платите лише за те, скільки використовуєте.","tags":["Devops","EC2","Beginner","AWS"],"title":"AWS 101: EC2 Part 1","wordcount":1571},{"categories":["Devops","Ansible","Beginner"],"date":"2022-09-19T10:54:18+03:00","description":"First article in series about ansible. In this article i will show install pyenv, create virtualenv and install required ansible version","href":"https://mpostument.com/ua/2022/09/19/manage-ansible-versions-with-pyenv/","keywords":["VSCode","Devops","Ansible","pyenv","RedHat","Beginner","virtualenv"],"lang":"ua","lastmod":1663574058,"objectID":"2b1a8094cf4753ffd7289373a3016fca","section":"post","summary":"Привіт!\nЦе перший пост з циклу про ansible, в якому я покажу як можна управляти версіями ansible та python за допомогою pyenv.\nPyenv pyenv дозволяє встановлювати різні версії python і також створювати virtual env в яких буде встановлено ansible.\nДля того щоб встановити pyenv потрібно виконати команду\ngit clone https://github.com/pyenv/pyenv.git ~/.pyenv та добавити pyenv в PATH\necho \u0026#39;export PYENV_ROOT=\u0026#34;$HOME/.pyenv\u0026#34;\u0026#39; \u0026gt;\u0026gt; ~/.bashrc echo \u0026#39;command -v pyenv \u0026gt;/dev/null || export PATH=\u0026#34;$PYENV_ROOT/bin:$PATH\u0026#34;\u0026#39; \u0026gt;\u0026gt; ~/.","tags":["VSCode","Devops","Ansible","pyenv","RedHat","Beginner"],"title":"Manage Ansible Versions With pyenv","wordcount":599},{"categories":["Devops","Terraform","Beginner","AWS"],"date":"2022-09-14T20:41:58+03:00","description":"Ninth article in series about terraform. In this article i will show how to import existing resources in to state and create modules","href":"https://mpostument.com/ua/2022/09/14/terraform-modules-and-import/","keywords":["VSCode","Devops","Terraform","HashiCorp","Beginner","EC2","Terraform Data","Data","Variables","lookups","condition","ternary operator"],"lang":"ua","lastmod":1663177318,"objectID":"e34c6fc8710a8b72e82fd049dfb823e6","section":"post","summary":"Part 1 - Terraform Install\nPart 2 - Terraform Basics\nPart 3 - Terraform State\nPart 4 - Terraform Template\nPart 5 - Terraform Dynamic\nPart 6 - Terraform Lifecycle\nPart 7 - Terraform Lifecycle\nPart 8 - Terraform Condition and Lookup\nПривіт!\nСьогодні подивимось як можна імпортувати існуючі ресурси в terraform і як організувати код в модуль для зручного перевикористання.\nImport Буває ситуація коли ресурси вже створенні і ними потрібно почати управляти за допомогою terraform.","tags":["VSCode","Devops","Terraform","tfenv","HashiCorp","Beginner","AWS"],"title":"Terraform Modules and Import","wordcount":2468},{"categories":["Devops","Terraform","Beginner","AWS"],"date":"2022-09-11T11:23:40+03:00","description":"Eights article in series about terraform. In this article i will show how to use conditions and lookups in terraform","href":"https://mpostument.com/ua/2022/09/11/terraform-condition-and-lookup/","keywords":["VSCode","Devops","Terraform","HashiCorp","Beginner","EC2","Terraform Data","Data","Variables","lookups","condition","ternary operator"],"lang":"ua","lastmod":1662884620,"objectID":"0375b6ce49b5945d7c4f22035e57486b","section":"post","summary":"Part 1 - Terraform Install\nPart 2 - Terraform Basics\nPart 3 - Terraform State\nPart 4 - Terraform Template\nPart 5 - Terraform Dynamic\nPart 6 - Terraform Lifecycle\nPart 7 - Terraform Lifecycle\nПривіт!\nВ цьому пості розкажу про condition та lookups.\nConditions Умови в terraform використовуються для того щоб вибрати одне значення в залежності від іншого. Наприклад якщо це дев середовище то використовувати тип сервера t3.micro а якщо продакшин то m5.","tags":["VSCode","Devops","Terraform","tfenv","HashiCorp","Beginner","AWS"],"title":"Terraform Condition and Lookup","wordcount":986},{"categories":["Devops","Terraform","Beginner","AWS"],"date":"2022-09-09T20:31:09+03:00","description":"Seventh article in series about terraform. In this article i will show how to use lifecycle and outputs in terraform","href":"https://mpostument.com/ua/2022/09/09/terraform-variables/","keywords":["VSCode","Devops","Terraform","HashiCorp","Beginner","EC2","Terraform Data","Data","Variables"],"lang":"ua","lastmod":1662744669,"objectID":"7eb0ba09df8394c914b118d8485fa30b","section":"post","summary":"Part 1 - Terraform Install\nPart 2 - Terraform Basics\nPart 3 - Terraform State\nPart 4 - Terraform Template\nPart 5 - Terraform Dynamic\nPart 6 - Terraform Lifecycle\nПривіт!\nВ цьому пості розкажу про параметри в terraform та terraform data.\nVariables Використаю код з попередніх постів. Створю новий файл variables.tf і додам в ньому параметр instance_type.\nvariable \u0026#34;instance_type\u0026#34; { default = \u0026#34;t2.micro\u0026#34; description = \u0026#34;Instance type for test instance\u0026#34; type = string } В цьому блоці до параметра instance_type додано декілька атрибутів:","tags":["VSCode","Devops","Terraform","tfenv","HashiCorp","Beginner","AWS"],"title":"Terraform Variables","wordcount":1037},{"categories":["Devops","Terraform","Beginner","AWS"],"date":"2022-08-28T21:22:25+03:00","description":"Sixth article in series about terraform. In this article i will show how to use lifecycle and outputs in terraform","href":"https://mpostument.com/ua/2022/08/28/terraform-lifecycle/","keywords":["VSCode","Devops","Terraform","HashiCorp","Beginner","EC2","LifeCycle","Depends","DependsOn","Outputs"],"lang":"ua","lastmod":1661710945,"objectID":"2d76e9aea6411e903cd9925a84b3d7af","section":"post","summary":"Part 1 - Terraform Install\nPart 2 - Terraform Basics\nPart 3 - Terraform State\nPart 4 - Terraform Template\nPart 5 - Terraform Dynamic\nПривіт!\nСьогодні розкажу про lifecycle, depends_on та outputs в terraform.\nLifecycle create_before_destroy Lifecycle є мета параметром які підтримує більшість ресурсів. І за допомогою нього можна контролювати поведінку при створенні/видаленні ресурсів.\nВізьму terraform код створення ec2 з одного з попередніх постів і додам в нього блок lifecycle.","tags":["VSCode","Devops","Terraform","tfenv","HashiCorp","Beginner","AWS"],"title":"Terraform Lifecycle and Outputs","wordcount":1628},{"categories":["Devops","Terraform","Beginner","AWS"],"date":"2022-08-22T20:25:57+03:00","description":"Fifth article in series about terraform. In this article i will show how to dynamic in terraform","href":"https://mpostument.com/ua/2022/08/22/terraform-dynamic/","keywords":["VSCode","Devops","Terraform","tfenv","HashiCorp","Beginner","Remote State","S3","AWS","DynamoDB","EC2","httpd","apache","bash"],"lang":"ua","lastmod":1661189157,"objectID":"3c46d645e44269b40a2ef899b212c83f","section":"post","summary":"Частина 1 - Terraform Install\nЧастина 2 - Terraform Basics\nЧастина 3 - Terraform State\nЧастина 4 - Terraform Template\nПривіт!\nВ цій статті покажу як використовувати блок dynamic на прикладі створення AWS Security Group.\nДля початку створю Security Group без використання блоку dynamic. В цьому прикладі кожне правило описане в окремому ingress блоці.\nresource \u0026#34;aws_security_group\u0026#34; \u0026#34;test_sg\u0026#34; { name = \u0026#34;test-sg\u0026#34; description = \u0026#34;allow traffic to web app\u0026#34; vpc_id = \u0026#34;vcp-123\u0026#34; ingress { from_port = 8082 to_port = 8082 protocol = \u0026#34;tcp\u0026#34; cidr_blocks = [ \u0026#34;0.","tags":["VSCode","Devops","Terraform","tfenv","HashiCorp","Beginner","AWS"],"title":"Terraform Dynamic","wordcount":312},{"categories":["Devops","Terraform","Beginner","AWS"],"date":"2022-08-11T20:59:58+03:00","description":"Fourth article in series about terraform. In this article i will show how to use file and templates in terraform","href":"https://mpostument.com/ua/2022/08/11/terraform-template/","keywords":["VSCode","Devops","Terraform","tfenv","HashiCorp","Beginner","Remote State","S3","AWS","DynamoDB","EC2","httpd","apache","bash"],"lang":"ua","lastmod":1660240798,"objectID":"d7f9ee140d7e3ef5b280e11760f4d26c","section":"post","summary":"Частина 1 - Terraform Install\nЧастина 2 - Terraform Basics\nЧастина 3 - Terraform State\nПривіт!\nВ цій статі я розкажу як в terraform можна використовувати статичні файли або ж генерувати файли динамічно. Покажу це на прикладі user_data в EC2. За допомогою user_data можна передати скрипт який виконається на сервері в момент створення. Цей файл можна мати одразу готовий і передавати за допомогою terraform в user_data, або ж контент можна генерувати динамічно і передавати в user_data.","tags":["VSCode","Devops","Terraform","tfenv","HashiCorp","Beginner","AWS"],"title":"Terraform Template","wordcount":360},{"categories":["Devops","Terraform","Beginner","AWS"],"date":"2022-07-31T20:30:06+03:00","description":"Third article in series about terraform. In this article i will show how to use terraform state","href":"https://mpostument.com/ua/2022/07/31/terraform-state/","keywords":["VSCode","Devops","Terraform","tfenv","HashiCorp","Beginner","Remote State","S3","AWS","DynamoDB","EC2"],"lang":"ua","lastmod":1659288606,"objectID":"8465a04021f330f450386a28640bdfb8","section":"post","summary":"Частина 1 - Terraform Install\nЧастина 2 - Terraform Basics\nПривіт!\nВ попередній статті я створював ec2 в AWS і після того викликав terraform destroy і terraform видалив тільки ec2 який створив, не зачепивши інших ресурсів. Як ж йому це вдалось?\nLocal State Щоб це зрозуміти потрібно подивитись на terraform директорію після того як виконався terraform apply. Одразу після виклику terraform apply буде створено файл з назвою terraform.tfstate з наступним контентом","tags":["VSCode","Devops","Terraform","tfenv","HashiCorp","Beginner","AWS"],"title":"Terraform State","wordcount":1037},{"categories":["Devops","Terraform","Beginner"],"date":"2022-07-28T20:27:17+03:00","description":"Second article in series about terraform. In this article i will show install terraform provider and create AWS EC2 using terraform","href":"https://mpostument.com/ua/2022/07/28/terraform-basics/","keywords":["VSCode","Devops","Terraform","tfenv","HashiCorp","Beginner","AWS"],"lang":"ua","lastmod":1659029237,"objectID":"7ca71c8d6e171297e339e0ef4c239f04","section":"post","summary":"Частина 1 - Terraform Install\nПривіт!\nВ попередній статті ми розглянули як встановити terraform. А зараз розглянемо як за допомогою terraform можна створювати та видаляти ресурси в AWS.\nДля того щоб terraform міг керувати ресурсами в AWS потрібно встановити terraform AWS provider. Terraform зробить це автоматично якщо я вкажу використовувати AWS provider в terraform коді і викличу terraform init.\nДля цього я створю директорію terraform_code і в ній створю файл provider.","tags":["VSCode","Devops","Terraform","tfenv","HashiCorp","Beginner","AWS"],"title":"Terraform Basics","wordcount":1324},{"categories":["Devops","Terraform","Beginner"],"date":"2022-07-26T20:54:23+03:00","description":"First article in series about terraform. In this article i will show how to manager terraform with tfenv and how to configure VSCode for work with terraform","href":"https://mpostument.com/ua/2022/07/26/terraform-install/","keywords":["VSCode","Devops","Terraform","tfenv","HashiCorp","Beginner"],"lang":"ua","lastmod":1658858063,"objectID":"c3ec95ef666929d4ba42d67e6fa8d3b0","section":"post","summary":"Привіт!\nЦе перша стаття з серії статей про terraform. В ній розглянемо як можна встановити terraform за допомогою tfenv та як налаштувати vscode для зручної роботи.\ntfenv Для початку буде потрібен tfenv. Він дозволяє дуже легко встановлювати та управляти різними версії terraform. Код tfenv знаходиться в github.\nЩоб встановити потрібно клонувати репозиторій\ngit clone --depth=1 https://github.com/tfutils/tfenv.git ~/.tfenv Тепер якщо викликати команду tfenv отримаємо помилку. Щоб не було помилки потрібно добавити tfenv в PATH або виконати команду ln -s ~/.","tags":["VSCode","Devops","Terraform","tfenv","HashiCorp","Beginner"],"title":"Manage terraform with tfenv","wordcount":689},{"categories":["Golang","Docker"],"date":"2022-03-22T20:31:29+02:00","description":"First article in series about docker SDK. In this article we will write docker pull and docker images commands with golang sdk","href":"https://mpostument.com/ua/2022/03/22/docker-sdk-part-one/","keywords":["Go","Docker","Beginner","Golang"],"lang":"ua","lastmod":1647973889,"objectID":"ac4ba1e6c8b709283b238ae55e791a17","section":"post","summary":"Привіт!\nЦе перша частина статей про docker sdk. В ній розглянемо як за допомогою golang можна робити pull та list docker images.\nDocker pull Як зазвичай ініціалізуємо go модуль, завантажимо docker sdk і створимо файл main.go\ngo mod init go get github.com/docker/docker/client Створимо метод PullImage в якому створимо docker client за допомогою методу client.NewClientWithOpts, як аргументи до цього методу передамо client.FromEnv який візьме конфігурацію docker зі змінних оточення і client.WithAPIVersionNegotiation() який автоматично визначить доступну версію docker API.","tags":["Go","Docker","Beginner"],"title":"Docker Sdk Part One","wordcount":455},{"categories":["Golang"],"date":"2022-03-15T20:29:54+02:00","description":"Learn how to use mongo with golang","href":"https://mpostument.com/ua/2022/03/15/using-mongo-with-go/","keywords":["Go","Mongo","Beginner","Golang"],"lang":"ua","lastmod":1647368994,"objectID":"eae1bc40005582321d8551c5dfdd743b","section":"post","summary":"Привіт!\nСьогодні подивимось як використовувати go з mongo. І розпочнемо з запуску mongo. Я буду використовувати docker-compose. Для цього потрібно створити файл з назвою docker-compose.yml. В файлі потрібно вказати яку версію монги використовувати. Я не вказую нічого це означає що буде остання версія. Також потрібно вказати ім\u0026rsquo;я користувача та пароль і порт який буде відкритий для доступу\nversion: \u0026#39;3.1\u0026#39; services: mongo: image: mongo restart: always environment: MONGO_INITDB_ROOT_USERNAME: root MONGO_INITDB_ROOT_PASSWORD: password ports: - 27017:27017 Після того як файл збережено потрібно виконати команду docker-compose up -d (Docker та docker-compose має бути встановлено) і буде запущено контейнер з mongo.","tags":["Go","Mongo","Beginner"],"title":"Using Mongo With Go","wordcount":524},{"categories":["Devops","AWS"],"date":"2022-03-08T20:29:47+02:00","description":"Which problems i faced when worked with aws_synthetics_canary terraform resource and how i solved them","href":"https://mpostument.com/ua/2022/03/08/aws-synthetics-with-terraform/","keywords":["Devops","AWS","Terraform","Synthetics"],"lang":"ua","lastmod":1646764187,"objectID":"1d0bc4e51badc09883c3240d5e980b4b","section":"post","summary":"Привіт!\nНедавно я за допомогою terraform автоматизовував створення AWS Synthetics, і стикнувся з декількома проблемами та хочу поділитись як я їх вирішив.\nlocals { common_tags = { cost-center = \u0026#34;observability\u0026#34; label = \u0026#34;canary\u0026#34; environment = \u0026#34;staging\u0026#34; } } data \u0026#34;archive_file\u0026#34; \u0026#34;login\u0026#34; { type = \u0026#34;zip\u0026#34; source_dir = \u0026#34;${path.module}/functions/login/\u0026#34; output_path = \u0026#34;${path.module}/functions/login.zip\u0026#34; } resource \u0026#34;aws_synthetics_canary\u0026#34; \u0026#34;login\u0026#34; { name = \u0026#34;login_test\u0026#34; artifact_s3_location = \u0026#34;s3://my_canary_bucket/\u0026#34; execution_role_arn = \u0026#34;role_arn\u0026#34; handler = \u0026#34;index.handler\u0026#34; zip_file = data.","tags":["AWS","Devops","Terraform"],"title":"AWS Synthetics With Terraform. Problems?","wordcount":649},{"categories":["Golang"],"date":"2022-02-20T20:37:23+02:00","description":"Learn how to use postgres with golang using pgx","href":"https://mpostument.com/ua/2022/02/20/using-postgres-with-go/","keywords":["Go","Postgres","Beginner","Golang"],"lang":"ua","lastmod":1645382243,"objectID":"ef0a4011b56f891ab9e309ee44e2f20e","section":"post","summary":"Привіт!\nСьогодні подивимось як за допомогою golang можна під\u0026rsquo;єднатися до postgres бази даних та виконувати запити. Для роботи з базою даних будемо використовувати github.com/jackc/pgx.\nРозпочнемо з ініціалізації модуля та встановлення драйвера для бази.\ngo mod init go get github.com/jackc/pgx/v4 Після цього pgx стане доступний для використання в коді.\nДля тестової бази даних я використаю docker, але це може бути який тип інсталяції. Для цього потрібно створити файл docker-compose.yml з контентом:","tags":["Go","Postgres","Beginner"],"title":"Using Postgres With Golang","wordcount":435},{"categories":["Algorithms"],"date":"2022-02-14T20:30:37+02:00","description":"How to solve sorted squared array codding task","href":"https://mpostument.com/ua/2022/02/14/sorted-squared-array/","keywords":["Algorithms","Interview","Codding Assignment"],"lang":"ua","lastmod":1644863437,"objectID":"a3212cd97a9d13764b9eea5d13b82c05","section":"post","summary":"Привіт!\nВ цьому завданні на вхід дається відсортований список, і його ціль полягає в тому щоб створити новий список який буде містити відсортовані числа у квадраті з першого списку. Найпростішим вирішення буде пройтись циклом по першому списку підняти всі числа у квадрат, додати в наш новий список і відсортувати. Але це рішення не буде оптимальним.\nДавайте розглянемо оптимальніше рішення яке буде виконуватись лінійно.\nДля прикладу візьмемо такий вхідний список - [-9, -1, 2, 3, 5, 6]","tags":["Algorithms","Interview","Codding Assignment"],"title":"Sorted Squared Array","wordcount":399},{"categories":["Devops","Golang"],"date":"2022-02-02T20:58:30+02:00","description":"What is WaitGroup and how to use it","href":"https://mpostument.com/ua/2022/02/02/wait-groups/","keywords":["Go","Golang","Multithreading"],"lang":"ua","lastmod":1643828310,"objectID":"9f0795dfa8d648cfc832c72cd7690594","section":"post","summary":"Привіт!\nСьогодні розглянемо WaitGroup в golang і подивимось як їх застосовувати на прикладі програми для пошуку файлів.\nWaitGroup очікує завершення go рутин. Основна go рутина викликає метод Add, і потім кожна go рутина викликає метод Done коли рутина завершується.\nРозпочнемо з методу findFile. В ньому читаємо всі файли й директорії в заданій папці. Проходимось циклом по них і якщо назва файлу який ми шукаємо збігається з назвою файлу з циклу то додаємо його в список matches.","tags":["Go","Multithreading"],"title":"WaitGroup","wordcount":372},{"categories":["Devops","Golang","AWS"],"date":"2022-01-31T19:30:37+02:00","description":"Learn how to use golang RWMutex","href":"https://mpostument.com/ua/2022/01/31/rwlock/","keywords":["Go","Golang","Multithreading"],"lang":"ua","lastmod":1643650237,"objectID":"fdf0ee648a4d5a9fbacfecc9e5e99db2","section":"post","summary":"Привіт!\nСьогодні розглянемо що таке RWMutex і як його використовувати. RWMutex — це блокування взаємного виключення читання/запису. Lock може мати довільна кількість читачів або один процес запису.\nRWMutex має такі методи:\nfunc (rw *RWMutex) Lock() // Write Lock func (rw *RWMutex) RLock() // Read Lock func (rw *RWMutex) RUnlock() // Read Unlock func (rw *RWMutex) Unlock() // Write Unlock Тепер подивимось як його можна застосувати. В першому прикладі подивимось на використання read lock","tags":["Go","Multithreading"],"title":"Read and Write lock in Go","wordcount":280},{"categories":["Algorithms"],"date":"2021-09-06T20:19:11+03:00","description":"Depth-first Search algorithm on golang","href":"https://mpostument.com/ua/2021/09/06/depth-first-search/","keywords":["Algorithms","Interview","Codding Assignment"],"lang":"ua","lastmod":1630948751,"objectID":"b9c1b69b41cb086ac880456787c4454a","section":"post","summary":"Привіт!\nСьогодні розглянемо Depth-first Search алгоритм. В нас є дерево і потрібно пройти по всіх його елементах з ліва на право. Візьмемо для прикладу дерево\n1 - 6 / \\ 2 - 4 10 - 6 / \\ \\ 3 - 2 5 - 4 23 - 7 Отже в цьому дереві є 6 елементів. Починаємо з кореня і переходимо в ліву вітку до 4, в цієї вітки є два дочірні вітки, йдемо в ліву до 2, повертаємось назад до 4 і йдемо в праву до 5.","tags":["Algorithms","Interview","Codding Assignment"],"title":"Depth First Search","wordcount":178},{"categories":["Algorithms"],"date":"2021-08-26T20:58:40+03:00","description":"How to find the node depth","href":"https://mpostument.com/ua/2021/08/26/node-depths/","keywords":["Algorithms","Interview","Codding Assignment"],"lang":"ua","lastmod":1630000720,"objectID":"fa0f6702b669a4613d5b9ac9e51c4424","section":"post","summary":"Привіт!\nСьогодні розглянемо простий алгоритм яким можна знайти глибину дерева. На вхід дається дерево і потрібно вивести глибину дерева. Глибина дерева це сума глибин усіх вузлів дерева.\nДля прикладу візьмемо дерево\n6 / \\ 4 10 / \\ \\ 2 5 23 / 3 Глибини кореня завжди становить 0, а наступні елементи завжди будуть глибина попереднього елемента +1. Тоді в нас получиться\n6 - 0 / \\ 1 - 4 10 - 1 / \\ \\ 2 5 23 / 3 6 - 0 / \\ 1 - 4 10 - 1 / \\ \\ 2 - 2 5 - 2 23 - 2 / 3 6 - 0 / \\ 1 - 4 10 - 1 / \\ \\ 2 - 2 5 - 2 23 - 2 / 3 - 1 Маючи глибину усіх елементів і додавши їх отримаємо глибину дерева.","tags":["Algorithms","Interview","Codding Assignment"],"title":"Node Depths","wordcount":247},{"categories":["Algorithms"],"date":"2021-08-23T20:49:50+03:00","description":"How to solve branch sum codding task","href":"https://mpostument.com/ua/2021/08/23/branch-sum/","keywords":["Algorithms","Interview","Codding Assignment"],"lang":"ua","lastmod":1629740990,"objectID":"9605f1ed23dff555b0cd6195310c8519","section":"post","summary":"Привіт!\nВ цій задачі на вхід дається дерево і потрібно знайти суму усіх віток в дереві. Алгоритм вирішення цієї задачі є простим. Візьмемо дерево\n6 / \\ 4 10 / \\ \\ 2 5 23 Починаємо з кореня, сума тут дорівнює 6. Спускаємось далі по дереву в лівій вітці це буде 6 + 4 = 10 та в правій 10 + 6 = 16.\n6 + 0 / \\ 6 + 4 10 + 16 / \\ \\ 2 5 23 Рухаємось далі по дереву в лівій частині виходить 10 + 2 = 12 і 10 + 5 = 115 та в правій 16 + 23 = 39","tags":["Algorithms","Interview","Codding Assignment"],"title":"Branch Sum","wordcount":256},{"categories":["Algorithms"],"date":"2021-08-10T20:02:00+03:00","description":"How to find the closest value in BST","href":"https://mpostument.com/ua/2021/08/10/find-closest-value-in-bst/","keywords":["Algorithms","Interview","Codding Assignment"],"lang":"ua","lastmod":1628614920,"objectID":"c23b841c5d48f35167532bfc72350ce1","section":"post","summary":"Привіт!\nСьогодні подивимось як знайти найближче значення в BST. На вхід дається бінарне дерево та число, і потрібно знайти найближче число до заданого. Наприклад маємо дерево:\n6 / \\ 4 10 / \\ \\ 2 5 23 Та число 13. Потрібно знайти число яке є найближчим до 13 в дереві. Для цього нам потрібно ще одне число (найближче значення), яке має велике значення, наприклад безкінечність.\nПочинаємо з кореня, в даному випадку він має значення 6.","tags":["Algorithms","Interview","Codding Assignment"],"title":"Find Closest Value in BST","wordcount":350},{"categories":["Algorithms"],"date":"2021-08-05T21:00:32+03:00","description":"How to solve validate subsequence codding task","href":"https://mpostument.com/ua/2021/08/05/validate-subsequence/","keywords":["Algorithms","Interview","Codding Assignment"],"lang":"ua","lastmod":1628186432,"objectID":"1b89132f9f47ee535223a58d040b5297","section":"post","summary":"Привіт!\nПершим вхідним параметром буде список з числами, другим буде також список з числами. Суть завдання полягає знайти чи є другий список підпослідовність першого.\nДля цього нам буде потрібен поінтер який буде вказувати на елементи з другого списку. Почнемо рухатись по кожному елементу з першого списку і перевіряти чи дорівнює він елементу з другого списку на який вказує поінтер.\nДля прикладу перший список 5, 3, 22, 25, 9, -5, 8, 7 і другий 3, 9, -5, 7.","tags":["Algorithms","Interview","Codding Assignment"],"title":"Validate Subsequence","wordcount":243},{"categories":["Algorithms"],"date":"2021-08-04T20:18:17+03:00","description":"Solve two number sum codding task with two pointers","href":"https://mpostument.com/ua/2021/08/04/two-number-sum/","keywords":["Algorithms","Interview","Codding Assignment"],"lang":"ua","lastmod":1628097497,"objectID":"d9adf05179694ba8e36c18b76eaf97d8","section":"post","summary":"Привіт!\nПершим вхідним параметром буде список з числами, другим буде число - сума яку потрібно знайти. Суть завдання полягає знайти яка пара чисел в сумі рівна другому аргументу.\nЄ декілька варіантів розв\u0026rsquo;язку цієї задачі, ми розглянемо варіант з двома поінтерами. Для цього нам буде потрібен відсортований список і два поінтера, один буде вказувати на перший елемент списку а інший на останній.\nДля прикладу візьмемо ось такий список цифр 8, -2, 11, 13, -1, 6, 4 та сума яку потрібно знайти 15.","tags":["Algorithms","Interview","Codding Assignment"],"title":"Two Number Sum","wordcount":277},{"categories":["Devops","Golang"],"date":"2021-03-06T18:56:24+02:00","description":"Автоматична генерація Readme для GitHub профайла","href":"https://mpostument.com/ua/2021/03/06/latest-post-in-github-readme/","keywords":["Go","Devops","GitHub","Readme","Golang"],"lang":"ua","lastmod":1615049784,"objectID":"c7d0308f04fa10683fa41238714a516f","section":"post","summary":"Привіт!\nСьогодні покажу як автоматично генерувати GitHub Readme з останніми блог постами за допомогою go. В GitHub потрібно створити репозиторій з іменем GitHub профіля. Мій GitHub профайл називається mpostument, отже я створю репозиторій з таким самим іменем.\nКлоную репозиторій і в ньому викликаю go mod init, для того щоб ініціалізувати go модуль якй і буде генерувати readme. В корені репозиторія потрібно створити main.go який і буде здійснювати генерацію.\nНа початку будуть імпорти та структура в яку будуть записуватись пости.","tags":["Go","Devops"],"title":"Latest post in GitHub readme","wordcount":437},{"categories":["Devops","Golang","AWS"],"date":"2021-02-06T18:14:40+02:00","description":"Автоматичний ресайз AWS EBS пристроїв з golang","href":"https://mpostument.com/ua/2021/02/06/ebs-auto-resize/","keywords":["Go","Devops","AWS","Golang","Ec2","Ebs"],"lang":"ua","lastmod":1612628080,"objectID":"081759482041dba062c5892008bf941e","section":"post","summary":"Привіт!\nСьогодні зробимо скрипт для автоматичного ресайзу EBS volume за допомогою golang i AWS SDK version 2. Для того щоб це зробити потрібно виконати декілька кроків, отримати список волюмів, відфільтрувати тих в яких кількість вільної пам\u0026rsquo;яті менший ніж трешхолд, знайти ebs id який відповідає даному волюму. Зробити ресайз на заданий процент і збільшити розмір диску на файловій системі.\nРозпочну з структури в якій буде зберігатись вся інформація по диску та вкажу всі потрібні імпорти.","tags":["Go","Devops","AWS"],"title":"Ebs Auto Resize","wordcount":1282},{"categories":["Devops","Golang","Monitoring","AWS"],"date":"2021-01-03T17:57:36+02:00","description":"Як отримувати slack повідомлення на неуспішне створення ec2 в autoscaling group","href":"https://mpostument.com/ua/2021/01/03/failed-asg-event-notification/","keywords":["Go","Devops","AWS","Golang"],"lang":"ua","lastmod":1609689456,"objectID":"503f7ec01eca1e8b2cc5e4368d20c4d6","section":"post","summary":"Привіт!\nСьогодні хочу розказати як за допомогою AWS Lambda та Golang можна отримувати повідомлення в slack коли Autoscaling не зміг створити Ec2 сервер. Деплой я автоматизую за допомогою serverless.\nПочнемо з інсталяцію node та serverless. Я використовую nvm для управління версіями node.\ncurl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.37.2/install.sh | bash nvm install v14.15.3 npm install -g serverless Створю папку та ініціалізую в ній go модуль.\nmkdir failed-asg cd failed-asg go mod init touch main.","tags":["Monitoring","Go","Devops","AWS"],"title":"Failed Asg Event Notification","wordcount":441},{"categories":["Devops","Golang","Monitoring"],"date":"2020-12-23T23:18:28+02:00","description":"Як імпортувати Grafana дашборди за допомогою Go","href":"https://mpostument.com/ua/2020/12/23/import-grafana-dashboards-with-go/","keywords":["Go","Devops","Grafana","Monitoring","Dashboard","Golang"],"lang":"ua","lastmod":1608758308,"objectID":"4d7049e08a0f81703492e1a5bf470f98","section":"post","summary":"Привіт!\nВ попередньому пості я показував як можна експортувати дашборди з Grafana. Тепер подивимось як їх можна імпортувати в Grafana.\nЯк завжди на початку будуть імпорти та main функція\npackage grafana import ( \u0026#34;context\u0026#34; \u0026#34;encoding/json\u0026#34; \u0026#34;fmt\u0026#34; \u0026#34;io/ioutil\u0026#34; \u0026#34;log\u0026#34; \u0026#34;os\u0026#34; \u0026#34;strings\u0026#34; \u0026#34;github.com/grafana-tools/sdk\u0026#34; ) func main() { } Додамо декілька параметрів:\nvar ( filesInDir []os.FileInfo rawBoard []byte err error grafanaURL string apiKey string directory string ) В filesInDir будуть зберігатись усі прочитані дашборди з файлової системи.","tags":["Monitoring","Go","Devops"],"title":"Import Grafana Dashboards With Go","wordcount":296},{"categories":["Devops","Golang","Monitoring"],"date":"2020-12-19T18:27:35+02:00","description":"Як експортувати Grafana дашборди за допомогою Go","href":"https://mpostument.com/ua/2020/12/19/export-grafana-dashboards-with-go/","keywords":["Go","Devops","Grafana","Monitoring","Dashboard","Golang"],"lang":"ua","lastmod":1608395255,"objectID":"41d85862a218fab15bba03521d52f94d","section":"post","summary":"Привіт!\nСьогодні подивимось як за допомогою go можна експортувати дашборди з Grafana. Для взаємодії з Grafana я використаю sdk. Sdk можна встановити за допомогою go get github.com/grafana-tools/sdk.\nПочнемо писати код. На початку файлу буде package, імпорти та main функція\npackage main import ( \u0026#34;context\u0026#34; \u0026#34;encoding/json\u0026#34; \u0026#34;fmt\u0026#34; \u0026#34;log\u0026#34; \u0026#34;os\u0026#34; \u0026#34;github.com/grafana-tools/sdk\u0026#34; ) func main() { } ) Додамо декілька параметрів:\nvar ( boardLinks []sdk.FoundBoard rawBoard sdk.Board meta sdk.BoardProperties err error grafanaURL string apiKey string directory string ) В boardLinks будуть добавлятись ссилки на дашборди в Grafana.","tags":["Monitoring","Go","Devops"],"title":"Export Grafana Dashboards With Go","wordcount":446},{"categories":["Devops","Golang"],"date":"2020-12-05T17:53:29+02:00","description":"Як відфільтрувати ebs снепшоти по даті за допомогою golang","href":"https://mpostument.com/ua/2020/12/05/filter-ebs-snapshot-by-date-with-go/","keywords":["Golang","AWS","Devops"],"lang":"ua","lastmod":1607183609,"objectID":"bbbc3627e7a4b89fc7926999adb302f6","section":"post","summary":"Привіт!\nСьогодні подивимось як можна фільтрувати ebs снепшоти по даті за допомогою golang.\nДля початку створю папку і в ній ініціалізую go модуль\nmkdir snapshotFilter cd snapshotFilter go mod init snapshotFilter Потрібно створити main.go в якому буде код. Почнемо з main функції\npackage main import ( \u0026#34;flag\u0026#34; \u0026#34;fmt\u0026#34; \u0026#34;log\u0026#34; \u0026#34;sort\u0026#34; \u0026#34;time\u0026#34; \u0026#34;github.com/aws/aws-sdk-go/aws\u0026#34; \u0026#34;github.com/aws/aws-sdk-go/aws/session\u0026#34; \u0026#34;github.com/aws/aws-sdk-go/service/ec2\u0026#34; ) func main() { sess := session.Must(session.NewSession()) ec2Client := ec2.New(sess) filterDate := flag.String(\u0026#34;snapshot-date\u0026#34;, time.Now().Format(time.RFC3339), \u0026#34;Provide snapshot creation date\u0026#34;) snapshotName := flag.","tags":["AWS","Go","Devops"],"title":"Filter Ebs Snapshot By Date With Go","wordcount":491},{"categories":["Devops","CI/CD"],"date":"2020-11-02T16:19:52+02:00","description":"Як добавити свій домен в GitHub Pages","href":"https://mpostument.com/ua/2020/11/02/custom-dns-for-github-pages/","keywords":["Hugo","GitHub","GitHub Pages","Github Actions","Devops","CI/CD","Namecheap","DNS"],"lang":"ua","lastmod":1604326792,"objectID":"d8cede0040c7b8f4286b9d7395692517","section":"post","summary":"Привіт!\nСьогодні хочу показати як для GithubPages сайту можна добавити кастомне доменне ім\u0026rsquo;я.\nДля цього потрібно виконати декілька кроків. Розпочнемо з реєстрації доменного імені. Для реєстрації яя вибрав Namecheap.\nПерейшовши на Namecheap в пошуку потрібно ввести доменне ім\u0026rsquo;я яке хочу купити і знайшовиши додати його в корзину.\nБіля мого доменного імені написано Taken це тому що я вже його купив.\nПісля того як доменне ім\u0026rsquo;я куплено потрібно перейти в свій профіль та натиснути Manage.","tags":["Devops","Hugo"],"title":"Custom Dns for Github Pages","wordcount":237},{"categories":["Devops","CI/CD"],"date":"2020-10-21T20:19:26+03:00","description":"Задеплой hugo вебсайт в GithubPages за допомогою GithubActions","href":"https://mpostument.com/ua/2020/10/21/deploy-hugo-with-github-actions-and-pages/","keywords":["Hugo","GitHub","GitHub Pages","Github Actions","Devops","CI/CD"],"lang":"ua","lastmod":1603300766,"objectID":"1a949b51bf7a10889fd0675e78eb4dda","section":"post","summary":"Привіт!\nХочу показати як можна деплоїти hugo вебсайт в GitHub Pages за допомогою github actions. Саме так я деплою свій сайт.\nInstall Hugo Hugo можна скачати з GitHub. І покласти binary в файл в потрібну локацію.\nGitHub setup В github потрібно створити два репозиторія, один в якому будуть зберігатись .md файли та тема (content-mpostument в моєму випадку) в інший буде використовуватись для GitHub Pages, в який буде деплоїтись сайт згенерований hugo (mpostument.","tags":["Devops","Hugo"],"title":"Deploy Hugo With Github Actions and Pages","wordcount":427},{"categories":["C#","Blazor"],"date":"2020-10-17T19:04:41+03:00","description":"Як добавити авторизацію в BlazorServer","href":"https://mpostument.com/ua/2020/10/17/blazor-server-authorization/","keywords":["Authorization","BlazorServer","Blazor",".Net Core",".Net"],"lang":"ua","lastmod":1602950681,"objectID":"8922ad03d1c212100e39c98ab6cb4a63","section":"post","summary":"Привіт!\nСьогодні подивимось як добавити авторизацію в Blazor Server. Для початку створимо новий проект в якому включемо автентифікацію.\nВ проекті з автентифікацією присутні декілька додаткових файлів, які відповідають за автентифікацію. Також в конфігураційному файлі буде добавлено connection string до бази даних.\n\u0026#34;ConnectionStrings\u0026#34;: { \u0026#34;DefaultConnection\u0026#34;: \u0026#34;Server=(localdb)\\\\mssqllocaldb;Database=aspnet-BlazorAuth-BD4B8646-B1A3-438C-8FFC-8C3A29438C24;Trusted_Connection=True;MultipleActiveResultSets=true\u0026#34; }, В package management консолі потрібно запустити команду Update-Database для того щоб створити базу даних та потрібні таблиці.\nТепер можна запустити аплікацію і спробувати залогуватись.","tags":["BlazorServer",".Net Core","Authorization"],"title":"Blazor Server Authorization","wordcount":722},{"categories":["C#","Blazor"],"date":"2020-10-16T16:09:30+03:00","description":"Як створити форму в BlazorServer","href":"https://mpostument.com/ua/2020/10/16/blazor-server-forms/","keywords":["BlazorServer","Blazor",".Net Core",".Net","Forms"],"lang":"ua","lastmod":1602853770,"objectID":"8dca8d8e6c1015b89c1e56d0d5181659","section":"post","summary":"Привіт!\nПодивимось як можна створити форму в BlazorServer.\nРозпочнемо з моделі. Створю файл Models/User.cs, який буде містити поля для форми.\nnamespace BlazorLearn.Models { public class User { public string UserName { get; set; } public string LastName { get; set; } public string Email { get; set; } public int Age { get; set; } public string Gender { get; set; } } } Для того щоб модель була доступна для razor компонентів її потрібно добавити в _Imports.","tags":["BlazorServer",".Net Core"],"title":"Blazor Forms","wordcount":569},{"categories":["C#","Blazor"],"date":"2020-10-15T11:37:56+03:00","description":"How to pass data from one component to another","href":"https://mpostument.com/ua/2020/10/15/events-in-blazor/","keywords":["BlazorServer","Blazor",".Net Core",".Net"],"lang":"ua","lastmod":1602751076,"objectID":"291a1a5aabe0712ade94e8c50c0e03c3","section":"post","summary":"Привіт!\nПодивимось як можна передати дані з одного компонента в інший. Для початку я створю дві кнопки при натисканні яких будуть передаватись дані в інший компонент.\nButton Я створю компонент з назвою ThumbButton який буде містити дві кнопки. В залежності яка кнопка натиснута буде викликатись відповідний метод і передавати дані в parrent компонент. В @onclick вказується який метод буде викликатись при настискані кнопки.\nДля того щоб передати дані в parrent компонент використовується властивість типу EventCallback\u0026lt;Thumb\u0026gt;, де Thumb це enum.","tags":["BlazorServer",".Net Core"],"title":"Events in Blazor","wordcount":350},{"categories":["C#","Blazor"],"date":"2020-10-14T11:47:34+03:00","description":"Як використовувати компоненти з параметрами в BlazorServer","href":"https://mpostument.com/ua/2020/10/14/component-with-parameters/","keywords":["BlazorServer",".Net",".Net Core","Components"],"lang":"ua","lastmod":1602665254,"objectID":"4954e91a2a1015863487163679d140d1","section":"post","summary":"Привіт!\nПодивимось як можна використовувати компоненти в BlazorServer та передавати параметри в них. Для цього зробимо два класи Student i School які будемо відображати на сторінці. Ці класи будуть в папці Models.\nModel using System.Collections.Generic; namespace BlazorLearn.Models { public class School { public string Name { get; set; } public List\u0026lt;Student\u0026gt; Students { get; set; } } } namespace BlazorLearn.Models { public class Student { public string FirstName { get; set; } public string LastName { get; set; } } } Razor Component Тепер я створю razor компоненти які будуть відповідати за відображення даних.","tags":["BlazorServer",".Net Core"],"title":"Component With Parameters","wordcount":506},{"categories":null,"date":"2020-10-13T13:42:30+03:00","description":"Три шляхи як організувати код в BlazorServer","href":"https://mpostument.com/ua/2020/10/13/three-ways-to-organize-code/","keywords":["BlazorServer","Blazor",".Net Core",".Net"],"lang":"ua","lastmod":1602585750,"objectID":"6a4ddf378c996d1b25d87ae78d7ba834","section":"post","summary":"Привіт!\nХочу розказати як можна організовувати код в BlazorServer.\nCode in client Перший варіант це зберігати код на клієнті (в razor файлі). Візьмемо Counter.razor файл в якому поєднується html та c# код.\n@page \u0026#34;/counter\u0026#34; \u0026lt;h1\u0026gt;Counter\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;Current count: @currentCount\u0026lt;/p\u0026gt; \u0026lt;button class=\u0026#34;btn btn-primary\u0026#34; @onclick=\u0026#34;IncrementCount\u0026#34;\u0026gt;Click me\u0026lt;/button\u0026gt; @code { private int currentCount = 0; private void IncrementCount() { currentCount++; } } На цій сторінці є приватна зміна currentCount та метод IncrementCount який інкрементує цю зміну.","tags":["BlazorServer",".Net Core"],"title":"Three Ways to Organize Code in BlazorServer","wordcount":333},{"categories":["C#","Blazor"],"date":"2020-10-12T11:57:31+03:00","description":"Як створити нову сторінку в BlazorServer та добавити її в меню","href":"https://mpostument.com/ua/2020/10/12/create-page-in-blazor/","keywords":["BlazorServer",".Net",".Net Core"],"lang":"ua","lastmod":1602493051,"objectID":"e14717e86d0d793e44c0f365e8aa2517","section":"post","summary":"Привіт!\nСьогодні розглянемо як можна створити нову сторінку в BlazorServer та добавити її в меню.\nAdd new page Для цього натисність правою кнопкою миші на папці Pages і виберіть Razor Component...\nЗявиться наступне вікно в якому потрібно обрати назву та натиснути Add\nСторінка буде створена з наступним контентом:\n\u0026lt;h3\u0026gt;Test1\u0026lt;/h3\u0026gt; @code { } Для того щоб її можна було відкрити в браузері на початку файла потрібно добавити @page \u0026quot;/test1\u0026quot; де test1 це назва ендпоінта.","tags":["BlazorServer",".Net Core"],"title":"Create Page in Blazor","wordcount":315},{"categories":["C#","Blazor"],"date":"2020-10-10T19:01:49+03:00","description":"Логування в blazor server","href":"https://mpostument.com/ua/2020/10/10/blazor-server-logging/","keywords":["BlazorServer","Blazor",".Net Core",".Net"],"lang":"ua","lastmod":1602345709,"objectID":"1bbdd871f35fc9609cec3ddbce830ae4","section":"post","summary":"Привіт!\nСьогодні подивимось як налаштовувати логування в BlazorServer.\nОдразу після створення проекту в корені проекту буде файл appsettings.json.\n{ \u0026#34;Logging\u0026#34;: { \u0026#34;LogLevel\u0026#34;: { \u0026#34;Default\u0026#34;: \u0026#34;Information\u0026#34;, \u0026#34;Microsoft\u0026#34;: \u0026#34;Warning\u0026#34;, \u0026#34;Microsoft.Hosting.Lifetime\u0026#34;: \u0026#34;Information\u0026#34; } }, \u0026#34;AllowedHosts\u0026#34;: \u0026#34;*\u0026#34; } Саме тут вкзаано налаштування логування. LogLevel починається з Default який має значення Information. Це означає що по замовчуванні лог левел буде Information. Далі йде Microsoft з рівнем Warning, відповідно для namespace Microsoft рівень логування буде Warning. І в самому кінці Microsoft.","tags":["BlazorServer",".Net Core"],"title":"Blazor Server Logging","wordcount":525},{"categories":["C#","Blazor"],"date":"2020-10-07T21:15:25+03:00","description":"Dependency injection в Blazor Server","href":"https://mpostument.com/ua/2020/10/07/blazor-server-dependency-injection/","keywords":["Dependency Injection","BlazorServer","Blazor",".Net Core",".Net"],"lang":"ua","lastmod":1602094525,"objectID":"7c8ca676c5fc19c13f772b312601285f","section":"post","summary":"Привіт!\nСьогодні поговоримо як працює dependency injection в blazor server. Якщо ви знайому з dependency injection в asp.net core то відміностей тут немає. Dependency injection налаштовуєтся в Startup.cs в корені проекта. Одразу після створення проекту це матиме ось такий вигляд\npublic void ConfigureServices(IServiceCollection services) { services.AddRazorPages(); services.AddServerSideBlazor(); services.AddSingleton\u0026lt;WeatherForecastService\u0026gt;(); } Розберемо що тут відбуваться.\nservices.AddRazorPages() - добавляє підтримку razor pages в проект\nservices.AddServerSideBlazor() - добавляє підтримку blazor server в проект\nservices.AddSingleton\u0026lt;WeatherForecastService\u0026gt;() - реєструє клас WeatherForecastService в DI.","tags":["BlazorServer",".Net Core","Dependency Injection"],"title":"Blazor Dependency Injection","wordcount":540},{"categories":["C#","Blazor"],"date":"2020-10-06T19:31:30+03:00","description":"Як налаштовувати Error Handling в Blazor Server","href":"https://mpostument.com/ua/2020/10/06/blazor-server-error-handling/","keywords":["BlazorServer",".Net",".Net Core","Error Handling"],"lang":"ua","lastmod":1602001890,"objectID":"214e4ac12cda1d953302a895e05d8795","section":"post","summary":"Привіт!\nСьогодні подивимось як можна поміняти еррор меседжі в Blazor Server. Є два типи помилок неіснуює сторінка або ексепшин. Можна міняти повідомлення яке буде відображатись в двох випадках. Першим розглянемо як поміняти повідомлення яке відображається користувача у випадку ексепшина.\nException Error В файлі Pages/_Host.cshtml даний участок відповідає за відображення помилки:\n\u0026lt;div id=\u0026#34;blazor-error-ui\u0026#34;\u0026gt; \u0026lt;environment include=\u0026#34;Staging,Production\u0026#34;\u0026gt; An error has occurred. This application may no longer respond until reloaded. \u0026lt;/environment\u0026gt; \u0026lt;environment include=\u0026#34;Development\u0026#34;\u0026gt; An unhandled exception has occurred.","tags":["BlazorServer",".Net Core"],"title":"Blazor Server Error Handling","wordcount":186},{"categories":["C#","Blazor"],"date":"2020-10-01T21:09:00+03:00","description":"Як працює роутінг в Blazor Server","href":"https://mpostument.com/ua/2020/10/01/blazor-server-routing/","keywords":["BlazorServer",".Net",".Net Core","Routing"],"lang":"ua","lastmod":1601575740,"objectID":"3acdd825695f375be5e342f8228504ca","section":"post","summary":"Привіт! Сьогодні я хочу розказати як працює роутінг в Blazor Server.\nРоутінг починається в файлі Startup.cs. За це відбовідає наступний код\napp.UseRouting(); app.UseEndpoints(endpoints =\u0026gt; { endpoints.MapBlazorHub(); endpoints.MapFallbackToPage(\u0026#34;/_Host\u0026#34;); }); app.UseRouting(); прийшов з asp.net і означає додати route matching в middleware pipeline. Цей middleware дивиться в набір ендпоінтів зазначених в аплікації і вибирає той який найбілше підходить базуючись на реквесті.\napp.UseEndpoints() додає ендпоніт в middleware pipeline. Він запускає делегат якому відповідає ендпоінт.","tags":["BlazorServer",".Net Core"],"title":"Blazor Server Routing","wordcount":498},{"categories":["Devops","DLP","CI/CD"],"date":"2020-09-30T21:52:21+03:00","description":"Налаштуй DLP Nightfall для свого GitHub проекту","href":"https://mpostument.com/ua/2020/09/30/nightfall-dlp-configuration/","keywords":["Github","AWS","Devops","DLP"],"lang":"ua","lastmod":1601491941,"objectID":"c9bed3c12991877a429be5200ac6201d","section":"post","summary":"Привіт!\nХочу сьогодні розказати про DLP Nightfall. Він дозволяє сканувати Pull Request на наявність на наявність персональної інформації, api ключів та інше.\nGithub Action Для Github Nightfall дає Action який можна використовувати для сканування Pull Request та Merge в бренчу. Для початку потрібно створити в корені репозиторія папку .github\\workflows і в цій папці створити файл dlp.yml. Назва файлу можу бути будь якою.\nname: nightfalldlp on: push: branches: - master pull_request: jobs: run-nightfalldlp: name: nightfalldlp runs-on: ubuntu-latest steps: - name: Checkout Repo Action uses: actions/checkout@v2 - name: nightfallDLP action step uses: nightfallai/nightfall_dlp_action@v0.","tags":["AWS","DLP","Github"],"title":"Nightfall Dlp Configuration","wordcount":329},{"categories":["Devops","CI/CD"],"date":"2020-09-16T20:24:40+03:00","description":"Задеплой свій код на Ec2 серверв з Codeship і AWS CodeDeploy","href":"https://mpostument.com/ua/2020/09/16/deploy-to-ec2-with-codeship/","keywords":["Codeship","CI/CD","Devops","AWS"],"lang":"ua","lastmod":1600277080,"objectID":"f1894487e3815508ec8cff85d59ffc9d","section":"post","summary":"Привіт!\nСьогодні я хочу показати як можна задеплоїти код на AWS EC2 за допомогою CodeShip Basic. Для цього я використаю інтеграцію Codeship з AWS CodeDeploy.\nCodeShip Configuration Спочатку потрібо добавити репозиторій в CodeShip і перейти в вкладу Deploy. І добавити branch з якої відбувається деплой на ec2. В моєму випадку branch master вже є добавлена. Після того як branch добавлено потрібно проскролити в низ до секції Deployment. І вибрати CodeDeploy Одразу зявиться наступна форма Тут потрібно ввести Access and Secret Keys користувача який буде здійснювати деплой.","tags":["Codeship","AWS","Devops"],"title":"Deploy to ec2 with codedship","wordcount":705},{"categories":["Devops","Golang"],"date":"2020-09-01T17:40:16+03:00","description":"Отримай всі AWS Lambda в VPC за допомогою Golang","href":"https://mpostument.com/ua/2020/09/01/get-lambdas-in-vpc-with-go/","keywords":["Golang","AWS","Devops"],"lang":"ua","lastmod":1598971216,"objectID":"1bde259a889825d95e7a34bda8b731a1","section":"post","summary":"Привіт!\nСьогодні я хочу розказати як за допомогою go можна отримати список всіх AWS Lambda які знаходяться в VPC. Для початку потрібно встановити golang. Останю версію можна завантажити з офіційного сайту.\nПісля того як golang встановлено створіть папку для скриптів mkdir awsscripts\nДалі потрібно ініціалізувати go.mod файл. Цей файл в якому зберігаються всі залежності на стороні пакети, і одночасно зробить go код модулем. І в майбутньому його можна буде встановлювати за допомогою go get.","tags":["AWS","Go","Devops"],"title":"Get Lambdas in Vpc With Go","wordcount":619},{"categories":["Devops","CI/CD"],"date":"2020-08-31T13:24:40+03:00","description":"Задеплой свій .net core проект з Travis CI","href":"https://mpostument.com/ua/2020/08/31/build-dotnet-core-with-travis/","keywords":["Travis",".Net",".Net Core","CI/CD","Devops"],"lang":"ua","lastmod":1598869480,"objectID":"65881c0558c939c87d9b11f57fc26be7","section":"post","summary":"Привіт!\nСьгодні я хочу показати як можна збілдити та задеплоїти .net core за допомогою Travis.\nДля початку потрібно створити Travis акаунт. Для цього потрібно залогуватись вашим GitHub акаунтом. .travis.yml Конфігурація Наступним кроком потрібно створити .travis.yml файл в корені репозиторія. Приклад мого конфігураційного файлу:\nlanguage: csharp mono: none dotnet: 3.1.4 solution: awstaghelper.sln install: - dotnet restore script: - dotnet build --configuration Release --runtime win-x64 --output win-x64 - dotnet build --configuration Release --runtime win-x86 --output win-x86 - dotnet build --configuration Release --runtime linux-x64 --output linux-x64 - dotnet build --configuration Release --runtime osx-x64 --output osx-x64 before_deploy: - zip -r9 win-x64.","tags":["Travis",".Net Core","Devops"],"title":"Build Dotnet Core With Travis","wordcount":445},{"categories":["GameMaker"],"date":"0001-01-01T00:00:00Z","description":"Explore arrays in game maker, and how to create/read them using for loop","href":"https://mpostument.com/ua/1/01/01/arrays/","keywords":["GameMaker","Beginner","GameDev","Indie","PixelArt","Array","Loop","For Loop"],"lang":"ua","lastmod":-62135596800,"objectID":"8f336137244e7596f60bb236b323bf43","section":"post","summary":"Привіт!\nВ цьому пості розглянемо роботу з масивами в Game Maker.\nМасиви можуть містити в собі багато елементів і бувають одномірними та багатомірними. На відміну інших мов програмування масив в Game Maker не потребує ініціалізації. Таким чином можна додати елемент в масив, де спочатку йде назва масиву а в квадратних дужках вказується його порядковий номер. Нумерація починається з нуля\ninventory[0] = \u0026#34;bow\u0026#34; inventory[1] = \u0026#34;arrow\u0026#34; В результаті це буде виглядати як масив з двох елементів [\u0026ldquo;bow\u0026rdquo;, \u0026ldquo;arrow\u0026rdquo;].","tags":["GameMaker","Beginner","GameDev"],"title":"Game Maker - Arrays","wordcount":594}]
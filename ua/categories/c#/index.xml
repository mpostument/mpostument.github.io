<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>C# on mpostument.com</title><link>/ua/categories/c#/</link><description>Recent content in C# on mpostument.com</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 10 Oct 2020 19:01:49 +0300</lastBuildDate><atom:link href="/ua/categories/c#/index.xml" rel="self" type="application/rss+xml"/><item><title>Blazor Server Logging</title><link>/ua/2020/10/10/blazor-server-logging/</link><pubDate>Sat, 10 Oct 2020 19:01:49 +0300</pubDate><guid>/ua/2020/10/10/blazor-server-logging/</guid><description>Привіт!
Сьогодні подивимось як налаштовувати логування в BlazorServer.
Одразу після створення проекту в корені проекту буде файл appsettings.json.
{ &amp;#34;Logging&amp;#34;: { &amp;#34;LogLevel&amp;#34;: { &amp;#34;Default&amp;#34;: &amp;#34;Information&amp;#34;, &amp;#34;Microsoft&amp;#34;: &amp;#34;Warning&amp;#34;, &amp;#34;Microsoft.Hosting.Lifetime&amp;#34;: &amp;#34;Information&amp;#34; } }, &amp;#34;AllowedHosts&amp;#34;: &amp;#34;*&amp;#34; } Саме тут вкзаано налаштування логування. LogLevel починається з Default який має значення Information. Це означає що по замовчуванні лог левел буде Information. Далі йде Microsoft з рівнем Warning, відповідно для namespace Microsoft рівень логування буде Warning. І в самому кінці Microsoft.</description></item><item><title>Blazor Server Error Handling</title><link>/ua/2020/10/06/blazor-server-error-handling/</link><pubDate>Tue, 06 Oct 2020 19:31:30 +0300</pubDate><guid>/ua/2020/10/06/blazor-server-error-handling/</guid><description>Привіт!
Сьогодні подивимось як можна поміняти еррор меседжі в Blazor Server. Є два типи помилок неіснуює сторінка або ексепшин. Можна міняти повідомлення яке буде відображатись в двох випадках. Першим розглянемо як поміняти повідомлення яке відображається користувача у випадку ексепшина.
Exception Error В файлі Pages/_Host.cshtml даний участок відповідає за відображення помилки:
&amp;lt;div id=&amp;#34;blazor-error-ui&amp;#34;&amp;gt; &amp;lt;environment include=&amp;#34;Staging,Production&amp;#34;&amp;gt; An error has occurred. This application may no longer respond until reloaded. &amp;lt;/environment&amp;gt; &amp;lt;environment include=&amp;#34;Development&amp;#34;&amp;gt; An unhandled exception has occurred.</description></item><item><title>Blazor Server Routing</title><link>/ua/2020/10/01/blazor-server-routing/</link><pubDate>Thu, 01 Oct 2020 21:09:00 +0300</pubDate><guid>/ua/2020/10/01/blazor-server-routing/</guid><description>Привіт! Сьогодні я хочу розказати як працює роутінг в Blazor Server.
Роутінг починається в файлі Startup.cs. За це відбовідає наступний код
app.UseRouting(); app.UseEndpoints(endpoints =&amp;gt; { endpoints.MapBlazorHub(); endpoints.MapFallbackToPage(&amp;#34;/_Host&amp;#34;); }); app.UseRouting(); прийшов з asp.net і означає додати route matching в middleware pipeline. Цей middleware дивиться в набір ендпоінтів зазначених в аплікації і вибирає той який найбілше підходить базуючись на реквесті.
app.UseEndpoints() додає ендпоніт в middleware pipeline. Він запускає делегат якому відповідає ендпоінт.</description></item></channel></rss>
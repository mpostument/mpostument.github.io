<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>GameMaker on Maksym Postument</title><link>https://mpostument.com/ua/categories/gamemaker/</link><description>Recent content in GameMaker on Maksym Postument</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 19 Nov 2022 12:23:22 +0200</lastBuildDate><atom:link href="https://mpostument.com/ua/categories/gamemaker/index.xml" rel="self" type="application/rss+xml"/><item><title>Game Maker - Timelines</title><link>https://mpostument.com/ua/programming/game_maker/timeline/</link><pubDate>Sat, 19 Nov 2022 12:23:22 +0200</pubDate><guid>https://mpostument.com/ua/programming/game_maker/timeline/</guid><description>Привіт!
Сьогодні подивимось що таки timeline і як за допомогою них можна створювати череду подій якій будуть запускатись одна за одною. Також використаємо path який ми розглядали в попередньому пості, для того щоб створювати об&amp;rsquo;єкти і відправляти їх по заданому шляху, по типу як це виглядає в TD іграх.
Timeline Timeline створюється як і будь яка інша сутність в Game Maker. Натиснувши правою кнопкою миші на теку Timelines і далі Create -&amp;gt; Timeline.</description><content>&lt;p>Привіт!&lt;/p>
&lt;p>Сьогодні подивимось що таки timeline і як за допомогою них можна створювати череду подій якій будуть запускатись одна за одною. Також використаємо path який ми розглядали в &lt;a href="https://mpostument.com/ua/programming/game_maker/path/" title="попередньому пості">попередньому пості&lt;/a>, для того щоб створювати об&amp;rsquo;єкти і відправляти їх по заданому шляху, по типу як це виглядає в TD іграх.&lt;/p>
&lt;h2 id="timeline">Timeline&lt;/h2>
&lt;p>Timeline створюється як і будь яка інша сутність в Game Maker. Натиснувши правою кнопкою миші на теку Timelines і далі Create -&amp;gt; Timeline. Назву її &lt;code>tml_spawn&lt;/code>.&lt;/p>
&lt;p>&lt;img src="https://mpostument.com/game_maker/timeline_create.jpg" alt="timeline_create">.&lt;/p>
&lt;p>Такий вигляд має вікно Timeline&lt;/p>
&lt;p>&lt;img src="https://mpostument.com/game_maker/timeline_props.jpg" alt="timeline_props">&lt;/p>
&lt;p>За допомогою кнопок Add та Remove можна додавати нові елементи. Перший доданий елемент буде мати Moment рівний 0. Далі я додам ще один Moment але його значення зміню на 60. Game Maker по дефолту працює 60 кадрів в секунду. І відповідно вказавши 60 це означає що друга подія відбудеться за 1 секунду після попередньої. Якщо вказати 120 то це буде означати 2 секунди і так далі. Тепер я відкрию Moment в якого вказано 0 і додам наступний код&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>instance_create_depth(x,y,&lt;span style="color:#ae81ff">1&lt;/span>,obj_enemy)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Цей код створить об&amp;rsquo;єкт за координатами де буде розміщений timeline. Timeline я буду викликати по колу для того щоб створювати об&amp;rsquo;єкти, а код в Moment з значенням 60 я залишу пустим для того щоб зробити паузу в 1 секунду між створенням об&amp;rsquo;єктів. В цьому випадку в мене буде створюватись тільки один вид об&amp;rsquo;єктів, якщо потрібно на різних секундах можна створювати різні типи об&amp;rsquo;єктів. Наприклад на першій секунді з&amp;rsquo;являється воїн, на другій лучник на третій маг і так по колу.&lt;/p>
&lt;p>Тепер нам потрібно створити об&amp;rsquo;єкт який буде запускати timeline. Для цього в теці objects створю об&amp;rsquo;єкт obj_spawn і додам івент &lt;code>Create&lt;/code> з наступним кодом&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>timeline_index&lt;span style="color:#f92672">=&lt;/span>tml_spawn
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>timeline_loop&lt;span style="color:#f92672">=&lt;/span>true
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>timeline_running&lt;span style="color:#f92672">=&lt;/span>true
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Спочатку вказуємо який timeline ми буде запускати, тоді робимо щоб timeline запускався по колу і включаємо timeline. Після цього timeline потрібно додати в кімнату в точку з якою будуть йти наші об&amp;rsquo;єкти.&lt;/p>
&lt;p>Також потрібно створити path та object з спрайтом так само як ми це робили в цьому &lt;a href="https://mpostument.com/ua/programming/game_maker/path/" title="пості">пості&lt;/a>. В об&amp;rsquo;єкті буде наступний код&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>path_start(pth_enemy, &lt;span style="color:#ae81ff">5&lt;/span>, path_action_stop, false)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Тепер запустимо гру і побачимо як об&amp;rsquo;єкти створюється в одній точці і рухаються по заданому шляху&lt;/p>
&lt;p>&lt;img src="https://mpostument.com/game_maker/timeline_result.jpg" alt="timeline_result">&lt;/p>
&lt;h2 id="video">Video&lt;/h2>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube.com/embed/GVpC8JqXoZ8" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div></content></item><item><title>Game Maker - Path</title><link>https://mpostument.com/ua/programming/game_maker/path/</link><pubDate>Wed, 16 Nov 2022 19:27:49 +0200</pubDate><guid>https://mpostument.com/ua/programming/game_maker/path/</guid><description>Привіт!
Розглянемо як працюють шляхи в GameMaker. За допомогою них можна задати траєкторію по якій буде рухатись об&amp;rsquo;єкт.
Path Шлях створюється так само як і будь яка інша сутність в GameMaker. В Asset Browser натиснути правою кнопкою миші і обрати Create-&amp;gt;Path.
Назву його як pth_enemy і в вікні що з&amp;rsquo;явилось можна малювати шлях. Бажано починати з точки 0,0. І далі натискаючи лівою кнопкою миші вказуємо точки по яких буде рухатись об&amp;rsquo;єкт</description><content>&lt;p>Привіт!&lt;/p>
&lt;p>Розглянемо як працюють шляхи в GameMaker. За допомогою них можна задати траєкторію по якій буде рухатись об&amp;rsquo;єкт.&lt;/p>
&lt;h2 id="path">Path&lt;/h2>
&lt;p>Шлях створюється так само як і будь яка інша сутність в GameMaker. В Asset Browser натиснути правою кнопкою миші і обрати Create-&amp;gt;Path.&lt;/p>
&lt;p>&lt;img src="https://mpostument.com/game_maker/path_object.gif" alt="path">&lt;/p>
&lt;p>Назву його як &lt;code>pth_enemy&lt;/code> і в вікні що з&amp;rsquo;явилось можна малювати шлях. Бажано починати з точки 0,0. І далі натискаючи лівою кнопкою миші вказуємо точки по яких буде рухатись об&amp;rsquo;єкт&lt;/p>
&lt;p>&lt;img src="https://mpostument.com/game_maker/path_draw.jpg" alt="path_draw">&lt;/p>
&lt;p>Також в цьому вікні є декілька важливих опцій. Перша це &lt;code>Closed&lt;/code> якщо вона буде натиснутою то остання точка з&amp;rsquo;єднається з першою&lt;/p>
&lt;p>&lt;img src="https://mpostument.com/game_maker/path_closed.jpg" alt="path_closed">&lt;/p>
&lt;p>Інша опція це &lt;code>Smooth Curved&lt;/code> якщо її вказати то лінії шляху одразу заокругляться&lt;/p>
&lt;p>&lt;img src="https://mpostument.com/game_maker/path_curve.jpg" alt="path_curve">&lt;/p>
&lt;h2 id="object-movement">Object movement&lt;/h2>
&lt;p>Тепер коли в нас є шлях, можна вказати об&amp;rsquo;єкту щоб він по ньому рухався. Для цього потрібно створити об&amp;rsquo;єкт і додати йому спрайт. Для об&amp;rsquo;єкта додаємо &lt;code>Create&lt;/code> івент і в ньому стартуємо рух за допомогою методу &lt;code>path_start&lt;/code> який приймає 4 аргументи. Перший це назва шляху по якому рухатись, другий це швидкість, третій що робити як шлях закінчиться(почати заново, вернутись в зворотньому напрямку, продовжити або зупинитись). І останній цей звідки починати рух, від точки координат відносно кімнати(буде використовуватись координата з якої ми починали малювати шлях) чи відносно об&amp;rsquo;єкта.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>path_start(pth_enemy, &lt;span style="color:#ae81ff">5&lt;/span>, path_action_continue, &lt;span style="color:#ae81ff">0&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Розміщую об&amp;rsquo;єкт в кімнаті і запускаю гру і мій об&amp;rsquo;єкт рухається. А руз починається з місця де ми об&amp;rsquo;єкт поставили, тому що останнім параметром я вказав 0. Якщо ж буде 1 то рух почнеться з нульової точки в кімнаті.&lt;/p>
&lt;h2 id="video">Video&lt;/h2>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube.com/embed/pth37wn6VtU" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div></content></item><item><title>Game Maker - Loops</title><link>https://mpostument.com/ua/programming/game_maker/loops/</link><pubDate>Sun, 13 Nov 2022 09:25:57 +0200</pubDate><guid>https://mpostument.com/ua/programming/game_maker/loops/</guid><description>Привіт!
Тема сьогоднішнього постав це цикли. Розглянемо такі цикли як while, until та repeat. For цикл ми розглядали в темі про масиви, почитати про них можна тут.
While loop While цикл працює доки умова повертає true і має такий вигляд. Після ключового слова while в круглих дужках йде умова, і доки ця умова повертає true то цикл буде продовжуватись. Як тільки вона стане false цикл одразу закінчується
while (&amp;lt;expression&amp;gt;) { &amp;lt;statement&amp;gt;; &amp;lt;statement&amp;gt;; .</description><content>&lt;p>Привіт!&lt;/p>
&lt;p>Тема сьогоднішнього постав це цикли. Розглянемо такі цикли як while, until та repeat. For цикл ми розглядали в темі про масиви, почитати про них можна &lt;a href="https://mpostument.com/ua/programming/game_maker/arrays/" title="тут">тут&lt;/a>.&lt;/p>
&lt;h2 id="while-loop">While loop&lt;/h2>
&lt;p>While цикл працює доки умова повертає true і має такий вигляд. Після ключового слова while в круглих дужках йде умова, і доки ця умова повертає true то цикл буде продовжуватись. Як тільки вона стане false цикл одразу закінчується&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">while&lt;/span> (&lt;span style="color:#f92672">&amp;lt;&lt;/span>expression&lt;span style="color:#f92672">&amp;gt;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>statement&lt;span style="color:#f92672">&amp;gt;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>statement&lt;span style="color:#f92672">&amp;gt;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Приклад while в Game Maker. Спочатку створюю параметр &lt;code>i&lt;/code> який має значення 0, і далі починаю цикл в якому вказую що він має працювати доки &lt;code>i&lt;/code> є менше 5. В циклі за допомогою &lt;code>draw_text&lt;/code> виводжу значення &lt;code>i&lt;/code> на екран і збільшую &lt;code>i&lt;/code> на одиницю. Якщо ж цього не зробити то &lt;code>i&lt;/code> так і буде мати значення 0 а наш цикл ніколи не закінчиться і гра не запуститься. Цей код я добавив в Draw Event.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>i &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">while&lt;/span> (i &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">5&lt;/span>){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> draw_text(&lt;span style="color:#ae81ff">10&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">70&lt;/span>&lt;span style="color:#f92672">*&lt;/span>i, &lt;span style="color:#ae81ff">10&lt;/span>, i)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> i&lt;span style="color:#f92672">++&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://mpostument.com/game_maker/while_loop.jpg" alt="while">&lt;/p>
&lt;h2 id="do-until-loop">Do until loop&lt;/h2>
&lt;p>Наступний цикл це do until. На відміну від while він працює доки умова повертає false, як тільки вона стане true то цикл одразу закінчиться&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>do
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>statement&lt;span style="color:#f92672">&amp;gt;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>statement&lt;span style="color:#f92672">&amp;gt;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>until (&lt;span style="color:#f92672">&amp;lt;&lt;/span>expression&lt;span style="color:#f92672">&amp;gt;&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>І одразу розглянемо приклад, результат виконання цього циклу буде такий ж самий як і попередній з while. Але умова тут інша. В нас знову ж є &lt;code>i&lt;/code> яке иає значення. Тоді ми починаємо цикл в якому відображаємо на екрані значення &lt;code>i&lt;/code> і збільшуємо значення &lt;code>i&lt;/code>, а далі в нас відбувається перевірка чи є &lt;code>i&lt;/code> більша за 5. Якщо так то завершуємо цикл, а якщо ні то продовжуємо.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>i &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>do {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> draw_text(&lt;span style="color:#ae81ff">10&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">70&lt;/span>&lt;span style="color:#f92672">*&lt;/span>i, &lt;span style="color:#ae81ff">10&lt;/span>, i)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> i&lt;span style="color:#f92672">++&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>} until (i &lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">5&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Особливістю цього циклу є що навіть якщо &lt;code>i&lt;/code> початково має значення більше за 5. Наприклад 6 то цикл відпрацює один раз, оскільки перевірка чи &lt;code>i&lt;/code> є більшою за 5 відбувається в кінці циклу, і таким чином цикл встигає пройти одну ітерацію.&lt;/p>
&lt;h2 id="repeat">Repeat&lt;/h2>
&lt;p>Останній вид циклу це repeat. На відміну від попередніх варіантів тут немає ніяких умов а ми просто вказуємо скільки раз пройтись по циклу&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>repeat (&lt;span style="color:#f92672">&amp;lt;&lt;/span>expression&lt;span style="color:#f92672">&amp;gt;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>statement&lt;span style="color:#f92672">&amp;gt;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>statement&lt;span style="color:#f92672">&amp;gt;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Спробуємо реалізувати теж саме що реалізувати за допомогою while та do циклів. Після ключового слова repeat в дужках вказуємо скільки раз має повторитись цикл а в самому тілі виконуємо такий самий код як і раніше, виводимо значення &lt;code>i&lt;/code> і збільшуємо його на одиницю&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>i &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>repeat(&lt;span style="color:#ae81ff">5&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> draw_text(&lt;span style="color:#ae81ff">10&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">70&lt;/span>&lt;span style="color:#f92672">*&lt;/span>i, &lt;span style="color:#ae81ff">10&lt;/span>, i)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> i&lt;span style="color:#f92672">++&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="video">Video&lt;/h2>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube.com/embed/m8l6w4fxFpo" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div></content></item><item><title>Game Maker - Arrays</title><link>https://mpostument.com/ua/programming/game_maker/arrays/</link><pubDate>Wed, 09 Nov 2022 20:30:58 +0200</pubDate><guid>https://mpostument.com/ua/programming/game_maker/arrays/</guid><description>Привіт!
В цьому пості розглянемо роботу з масивами в Game Maker.
Масиви можуть містити в собі багато елементів і бувають одномірними та багатомірними. На відміну інших мов програмування масив в Game Maker не потребує ініціалізації. Таким чином можна додати елемент в масив, де спочатку йде назва масиву а в квадратних дужках вказується його порядковий номер. Нумерація починається з нуля
inventory[0] = &amp;#34;bow&amp;#34; inventory[1] = &amp;#34;arrow&amp;#34; В результаті це буде виглядати як масив з двох елементів [&amp;ldquo;bow&amp;rdquo;, &amp;ldquo;arrow&amp;rdquo;].</description><content>&lt;p>Привіт!&lt;/p>
&lt;p>В цьому пості розглянемо роботу з масивами в Game Maker.&lt;/p>
&lt;p>Масиви можуть містити в собі багато елементів і бувають одномірними та багатомірними. На відміну інших мов програмування масив в Game Maker не потребує ініціалізації. Таким чином можна додати елемент в масив, де спочатку йде назва масиву а в квадратних дужках вказується його порядковий номер. Нумерація починається з нуля&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>inventory[&lt;span style="color:#ae81ff">0&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;bow&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>inventory[&lt;span style="color:#ae81ff">1&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;arrow&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>В результаті це буде виглядати як масив з двох елементів [&amp;ldquo;bow&amp;rdquo;, &amp;ldquo;arrow&amp;rdquo;]. Також часто використовуються двомірні масиви. Для цього потрібно додати ще одні квадратні дужки які будуть означати колонку&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>inventory[&lt;span style="color:#ae81ff">0&lt;/span>][&lt;span style="color:#ae81ff">0&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;bow&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>inventory[&lt;span style="color:#ae81ff">0&lt;/span>][&lt;span style="color:#ae81ff">1&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;arrow&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>inventory[&lt;span style="color:#ae81ff">1&lt;/span>][&lt;span style="color:#ae81ff">0&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;sword&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>inventory[&lt;span style="color:#ae81ff">1&lt;/span>][&lt;span style="color:#ae81ff">0&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;shield&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>В цьому випадку це буде виглядати як таблиця з двох рядків та двох колонок.&lt;/p>
&lt;h2 id="for-loop">For loop&lt;/h2>
&lt;p>Для наповнення масиву даними чи читанням з нього часто використовується цикл for. Це значно зменшує кількість коду яку потрібно написати. Наприклад якщо потрібно додати 100 елементів в масив то можна 100 раз скопіювати рядок присвоєння елемента масиву але працювати з цим не дуже зручно. Створимо пустий масив з 100 елементів.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>inventory[&lt;span style="color:#ae81ff">0&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;empty&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>inventory[&lt;span style="color:#ae81ff">1&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;empty&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>inventory[&lt;span style="color:#ae81ff">98&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;empty&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>inventory[&lt;span style="color:#ae81ff">99&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;empty&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Якщо ж використати for це буде значно компактніше. Цикл for виглядає таким чином&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> (i &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>; i &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">99&lt;/span>, i&lt;span style="color:#f92672">++&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># CODE&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>i&lt;/code> вказує звідки ми починаємо відлік. Далі йде умова що &lt;code>i&lt;/code> має бути менше 99, як тільки і стане 99 цикл одразу закінчиться. І в кінці маємо &lt;code>i++&lt;/code> що означає що і буде збільшуватись на 1. Таким чином коли починається цикл ми маємо &lt;code>i = 0&lt;/code>. Після першого проходження циклу &lt;code>i&lt;/code> збільшується на 1 і стає рівним &lt;code>i = 1&lt;/code>. І так аж доки &lt;code>i&lt;/code> не стане 99. Далі цикл завершується.&lt;/p>
&lt;p>Спробуємо створити пустий одновимірний масив за допомогою циклу.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> (i &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>; i &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">99&lt;/span>, i&lt;span style="color:#f92672">++&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> inventory[i] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;empty&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Таким чином при кожному проходженні циклу i буде збільшуватись і ми створимо масив з 100 елементів з значенням &amp;ldquo;empty&amp;rdquo;. Це можна додати в event &lt;code>Draw&lt;/code> щоб відобразити масив. Але перед тим він має бути створений. Його створення в викликаю в івенті &lt;code>Create&lt;/code>. В draw_text до координати x додам ще &lt;code>70*i&lt;/code>, це для того щоб був відступ по x координаті між елементами масиву. Коли i = 0 то &lt;code>70*i&lt;/code> теж буде 0. Далі це буде 70, 140 і так далі.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> (i &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>; i &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">99&lt;/span>, i&lt;span style="color:#f92672">++&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> draw_text(&lt;span style="color:#ae81ff">10&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">70&lt;/span>&lt;span style="color:#f92672">*&lt;/span>i, &lt;span style="color:#ae81ff">10&lt;/span>, inventory[i])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://mpostument.com/game_maker/one_d_array.jpg" alt="1d">&lt;/p>
&lt;p>Двовимірний масив можна створити таким ж чином тільки нам буде потрібно два цикли&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> (i &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>; i &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">99&lt;/span>, i&lt;span style="color:#f92672">++&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> (j &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>; j &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">99&lt;/span>, i&lt;span style="color:#f92672">++&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> inventory[i][j] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;empty&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Що буде відбуватись в цьому випадку? Спочатку починаємо перший цикл де &lt;code>i = 0&lt;/code>, далі одразу попадаємо в другий цикл де &lt;code>j = 0&lt;/code>. І в масив по індексу [0][0] робимо перший запис. Далі &lt;code>i&lt;/code> в нас так і залишається 0 а &lt;code>j&lt;/code> збільшується на 1. Тому в масив ми робимо запис в індекс [0][1] і так далі аж доки &lt;code>j&lt;/code> не стане 99. Тоді вкладений цикл завершиться і ми повернемось до циклу з &lt;code>i&lt;/code>. Тут &lt;code>i&lt;/code> збільшиться на 1 і знову піде в вкладний цикл де &lt;code>j&lt;/code> рівне 0. І зробимо запис в індекс [1][0] і знову доки &lt;code>j&lt;/code> не стане 99 а &lt;code>i&lt;/code> збільшится на 1 аж доки не дійде до 99 і тоді цикл завершиться.&lt;/p>
&lt;p>Для того щоб відобразити двовимірний масив теж буде потрібно два цикли. А все решта так само як і з одновимірним&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> (i &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>; i &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">99&lt;/span>, i&lt;span style="color:#f92672">++&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> (j &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>; j &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">99&lt;/span>, i&lt;span style="color:#f92672">++&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> draw_text(&lt;span style="color:#ae81ff">10&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">70&lt;/span>&lt;span style="color:#f92672">*&lt;/span>i, &lt;span style="color:#ae81ff">10&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">70&lt;/span>&lt;span style="color:#f92672">*&lt;/span>j, inventory[i][j])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://mpostument.com/game_maker/two_d_array.jpg" alt="2d">&lt;/p>
&lt;h2 id="video">Video&lt;/h2>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube.com/embed/63I2HLMvXnY" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div></content></item><item><title>Game Maker - Conditions</title><link>https://mpostument.com/ua/programming/game_maker/conditions/</link><pubDate>Sun, 06 Nov 2022 13:30:58 +0200</pubDate><guid>https://mpostument.com/ua/programming/game_maker/conditions/</guid><description>Привіт!
Розглянемо умови в Game Maker. Умови можна створювати як за допомогою if/else так і switch. Розглянемо обидва варіанти.
If/Else В Game Maker if/else умови такі ж як і в інших мовах програмування. Сам блок виглядає так:
if (&amp;lt;expression&amp;gt;) { &amp;lt;statement&amp;gt;; } else { &amp;lt;statement&amp;gt;; } Наприклад ми можемо мати на перевірку здоров&amp;rsquo;я нашого об&amp;rsquo;єкта. Наприклад якщо hp &amp;lt; 100 то знищуємо об&amp;rsquo;єкт. Для того щоб це зробити використаємо новий типу івенту який називається Step.</description><content>&lt;p>Привіт!&lt;/p>
&lt;p>Розглянемо умови в Game Maker. Умови можна створювати як за допомогою if/else так і switch. Розглянемо обидва варіанти.&lt;/p>
&lt;h2 id="ifelse">If/Else&lt;/h2>
&lt;p>В Game Maker if/else умови такі ж як і в інших мовах програмування. Сам блок виглядає так:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#f92672">&amp;lt;&lt;/span>expression&lt;span style="color:#f92672">&amp;gt;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>statement&lt;span style="color:#f92672">&amp;gt;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>statement&lt;span style="color:#f92672">&amp;gt;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Наприклад ми можемо мати на перевірку здоров&amp;rsquo;я нашого об&amp;rsquo;єкта. Наприклад якщо hp &amp;lt; 100 то знищуємо об&amp;rsquo;єкт. Для того щоб це зробити використаємо новий типу івенту який називається &lt;code>Step&lt;/code>. Цей event виконується кожен кадр. Зазвичай основна логіка відбувається саме в цьому івенті.&lt;/p>
&lt;p>Спочатку в event &lt;code>Create&lt;/code> задамо початкову кількість hp&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>hp &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">100&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Тоді додамо event &lt;code>Step&lt;/code> і в ньому додамо наступний код. В дужках біля if є і сама наша умова. Де ми перевіряємо чи hp є менше рівне 100. Окрім &amp;lt;= менше рівно є ще &amp;lt; менше, &amp;gt; більше, = рівне, нерівне !=, &amp;gt;= більше рівне. Також можна одразу використовувати не одну умову а більше, для цього є &amp;amp;&amp;amp; що означає and та || що означає or. В коді можна записувати як і символами так і буквами. І це може виглядати так if (hp &amp;lt;= and armor &amp;lt;= 0)&lt;/p>
&lt;p>Якщо ж у нас умова повертає &lt;code>False&lt;/code> тому що кількість hp є більшою за 0 ми переходимо в else. В else ми просто переміщуємо наш об&amp;rsquo;єкт по діагоналі і віднімаємо 1 hp. If умова перевіряється кожен кадр і вже через декілька секунд кількість hp стане меншою за 0 і об&amp;rsquo;єкт знищиться.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> (hp &lt;span style="color:#f92672">&amp;lt;=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> instance_destroy()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> x &lt;span style="color:#f92672">=&lt;/span> x &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> y &lt;span style="color:#f92672">=&lt;/span> y &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> hp &lt;span style="color:#f92672">=&lt;/span> hp &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Якщо нам потрібно задати декілька умов то можна використати else if. Наприклад якщо залишається менше 50 hp додати ще один об&amp;rsquo;єкт&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> (hp &lt;span style="color:#f92672">&amp;lt;=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> instance_destroy()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> (hp &lt;span style="color:#f92672">&amp;lt;=&lt;/span> &lt;span style="color:#ae81ff">50&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> instance_create_layer(x, y, &lt;span style="color:#e6db74">&amp;#34;Instances&amp;#34;&lt;/span>, obj_vars)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> x &lt;span style="color:#f92672">=&lt;/span> x &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> y &lt;span style="color:#f92672">=&lt;/span> y &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> hp &lt;span style="color:#f92672">=&lt;/span> hp &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Якщо умов стає багато то в такому випадку краще використати switch.&lt;/p>
&lt;h2 id="switch">Switch&lt;/h2>
&lt;p>Ось так виглядає switch&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>switch (&lt;span style="color:#f92672">&amp;lt;&lt;/span>expression&lt;span style="color:#f92672">&amp;gt;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>constant1&lt;span style="color:#f92672">&amp;gt;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>code&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>constant2&lt;span style="color:#f92672">&amp;gt;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>code&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">//&lt;/span> more cases (&lt;span style="color:#66d9ef">with&lt;/span> breaks)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> default:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>code&lt;span style="color:#f92672">&amp;gt;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Наприклад ми можемо виконувати якусь дію в залежності від того яка клавіша натиснута. В дужках біля switch вказуємо keyboard_key яка є вбудованим параметром який приймає значення в залежності від того яка клавіша натиснута. І тоді описуємо кожен case. Якщо натиснута клавіша вверх переміщуємо героя вверх, якщо вниз то вниз і так далі&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>switch (keyboard_key)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> vk_left:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> x &lt;span style="color:#f92672">-=&lt;/span> &lt;span style="color:#ae81ff">4&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> vk_right:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> x &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#ae81ff">4&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> vk_up:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> y &lt;span style="color:#f92672">-=&lt;/span> &lt;span style="color:#ae81ff">4&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> vk_down:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> y &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#ae81ff">4&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Також в case може буде дефолтна дія, вона виконується в тому випадку якщо всі інші кейси повернули false.&lt;/p>
&lt;h2 id="video">Video&lt;/h2>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube.com/embed/b5odh89pfjg" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div></content></item><item><title>Game Maker - Coordinates</title><link>https://mpostument.com/ua/programming/game_maker/coordinates/</link><pubDate>Fri, 04 Nov 2022 19:17:15 +0200</pubDate><guid>https://mpostument.com/ua/programming/game_maker/coordinates/</guid><description>Привіт!
Розглянемо як працюють координати в Game Maker.
Room coordinates Відкрию кімнату (Room1) і якщо навести в мишку в лівий верхній куток то в цьому місці будуть координати x = 0, y = 0. Якщо рухатись вправо/вліво то координата x буде змінюватись, а якщо верх/вниз то буде змінюватись координата y.
Це основна інформація яку потрібно знати по координатах. А тепер спробуємо додати об&amp;rsquo;єкт і перемістити його
Object coordinates Об&amp;rsquo;єкт може бути добавлений в кімнату по будь яких доступних координатах.</description><content>&lt;p>Привіт!&lt;/p>
&lt;p>Розглянемо як працюють координати в Game Maker.&lt;/p>
&lt;h2 id="room-coordinates">Room coordinates&lt;/h2>
&lt;p>Відкрию кімнату (Room1) і якщо навести в мишку в лівий верхній куток то в цьому місці будуть координати x = 0, y = 0. Якщо рухатись вправо/вліво то координата x буде змінюватись, а якщо верх/вниз то буде змінюватись координата y.&lt;/p>
&lt;p>&lt;img src="https://mpostument.com/game_maker/room_coordinates.jpg" alt="room_coordinates">&lt;/p>
&lt;p>Це основна інформація яку потрібно знати по координатах. А тепер спробуємо додати об&amp;rsquo;єкт і перемістити його&lt;/p>
&lt;h2 id="object-coordinates">Object coordinates&lt;/h2>
&lt;p>Об&amp;rsquo;єкт може бути добавлений в кімнату по будь яких доступних координатах. Для цього я створю об&amp;rsquo;єкт. Але щоб об&amp;rsquo;єкт було видно в кімнаті йому потрібен спрайт. Можна просто зафарбувати об&amp;rsquo;єкт якимось кольором. Для цього на сторінці об&amp;rsquo;єкту можна натиснути &lt;code>New Sprite&lt;/code> або Ctrl+Shift+N. Одразу відкриється вікно спрайта де можна натиснути &lt;code>Edit Image&lt;/code>, тоді відкриється вікно в якому можна намалювати свій спрайт&lt;/p>
&lt;p>&lt;img src="https://mpostument.com/game_maker/sprite_color.jpg" alt="sprite">&lt;/p>
&lt;p>Але спрайт створиться з назвою Sprite1 і в теці objects. Варто його перейменувати та перемістити в теку Sprites. Я перейменую його в &lt;code>spr_vars&lt;/code> щоб було зрозуміло що спрайт стосується мого об&amp;rsquo;єкта який називається &lt;code>obj_vars&lt;/code>.&lt;/p>
&lt;p>Тепер можна відкрити кімнату і перетягнути туди об&amp;rsquo;єкт&lt;/p>
&lt;p>&lt;img src="https://mpostument.com/game_maker/obj_in_room.jpg" alt="obj_in_room">&lt;/p>
&lt;p>Також модифікуємо об&amp;rsquo;єкт щоб він показував координати в яких знаходиться.&lt;/p>
&lt;p>Додам event &lt;code>Create&lt;/code> в об&amp;rsquo;єкт в якому вкажу початкові координати&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>x &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>y &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Також додам event &lt;code>Draw&lt;/code> в якому буду виводити координати. Використаю вже відомий з попереднього постав метод &lt;code>draw_text&lt;/code>. Перед тим як вивести текст потрібно додати &lt;code>draw_self()&lt;/code> для того щоб намалювати сам об&amp;rsquo;єкт. А далі два виклики метода &lt;code>draw_text&lt;/code> для X та Y координати. Першим аргументом я передаю x який дорівнює координаті x об&amp;rsquo;єкта. Те ж саме з y але я зміщую текст в них по координаті y, для того щоб текст не находив один на одного. А виводжу я такий текст X: 0. Для цього я додаю string &amp;ldquo;X:&amp;rdquo; до координати x. Але оскільки координата x це int, то мені спочатку треба її перетворити в тип string.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>draw_self()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>draw_text(x, y&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">5&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;X:&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> string(x))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>draw_text(x, y&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">20&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;Y:&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> string(y))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Натискаю F5 щоб запустити гру&lt;/p>
&lt;p>&lt;img src="https://mpostument.com/game_maker/obj_with_coords.jpg" alt="obj_with_coords">&lt;/p>
&lt;p>Додамо тепер зміну координат об&amp;rsquo;єкта. Зроблю це за допомогою Event типу &lt;code>Global Left Down&lt;/code>. чому потрібен саме global? Для того щоб можна було натиснути в будь яку точку кімнати. Якщо використати &lt;code>Left Down&lt;/code> то клік буде рахуватись тільки якщо він здійснений на об&amp;rsquo;єкт. І додам наступний код&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>x &lt;span style="color:#f92672">=&lt;/span> mouse_x
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>y &lt;span style="color:#f92672">=&lt;/span> mouse_y
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Цей код змінює координати об&amp;rsquo;єкта на координати курсора&lt;/p>
&lt;p>&lt;img src="https://mpostument.com/game_maker/move_coordinates.jpg" alt="move_coordinates">&lt;/p>
&lt;h2 id="origin">Origin&lt;/h2>
&lt;p>Кожен раз коли ми робимо клік то в цю точці розміщується саме лівий верхній куток об&amp;rsquo;єкта. Це тому що туди встановлено origin. Origin вказується на рівні спрайта і може бути змінений. Для цього потрібно відкрити спрайт і одразу буде видно що origin встановлено в верхній лівий кут. За допомогою миші його можна перенести в будь яку точку або ж вибрати один з існуючих варіантів як Top Left, Top Center та інші.&lt;/p>
&lt;p>&lt;img src="https://mpostument.com/game_maker/origin.jpg" alt="origin">&lt;/p>
&lt;p>Якщо я переміщу origin в іншу точку та запущу гру і переміщу об&amp;rsquo;єкт то в цю точку поміститься саме те місце яке вказане як origin&lt;/p>
&lt;p>&lt;img src="https://mpostument.com/game_maker/center_origin.jpg" alt="center_origin">&lt;/p>
&lt;p>Але тепер як видно текст який ми виводимо змістився. Тому що він відображається відповідно до origin. Тому щоб знову зробити текст всередині об&amp;rsquo;єкта координати в методі &lt;code>draw_text&lt;/code> потрібно змінити&lt;/p>
&lt;p>Наприклад ось так якщо origin стоїть в центрі&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>draw_self()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>draw_text(x&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">20&lt;/span>, y&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">15&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;X:&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> string(x))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>draw_text(x&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">20&lt;/span>, y, &lt;span style="color:#e6db74">&amp;#34;Y:&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> string(y))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="video">Video&lt;/h2>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube.com/embed/b5odh89pfjg" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div></content></item><item><title>Game Maker - Variables</title><link>https://mpostument.com/ua/programming/game_maker/variables/</link><pubDate>Sun, 30 Oct 2022 18:48:32 +0200</pubDate><guid>https://mpostument.com/ua/programming/game_maker/variables/</guid><description>Привіт!
Поринемо у світ геймдеву з Game Maker 2. І сьогодні розпочнемо з параметрів в Game Maker. Створимо новий проект вибравши New Blank і назву його variables.
Object Параметри можна додавати до об&amp;rsquo;єктів. Об&amp;rsquo;єктом може бути практично будь чим починаю від героя і ворогів закінчуючи об&amp;rsquo;єктами які керують якоюсь логікою в грі. Для того щоб створити об&amp;rsquo;єкт потрібно натиснути правою кнопкою миші в Assets Browser на теці Objects і обрати Create -&amp;gt; Object.</description><content>&lt;p>Привіт!&lt;/p>
&lt;p>Поринемо у світ геймдеву з Game Maker 2. І сьогодні розпочнемо з параметрів в Game Maker. Створимо новий проект вибравши &lt;code>New Blank&lt;/code> і назву його variables.&lt;/p>
&lt;p>&lt;img src="https://mpostument.com/game_maker/new_project.png" alt="project">&lt;/p>
&lt;h2 id="object">Object&lt;/h2>
&lt;p>Параметри можна додавати до об&amp;rsquo;єктів. Об&amp;rsquo;єктом може бути практично будь чим починаю від героя і ворогів закінчуючи об&amp;rsquo;єктами які керують якоюсь логікою в грі. Для того щоб створити об&amp;rsquo;єкт потрібно натиснути правою кнопкою миші в Assets Browser на теці Objects і обрати Create -&amp;gt; Object.&lt;/p>
&lt;p>&lt;img src="https://mpostument.com/game_maker/object.jpg" alt="object_create">&lt;/p>
&lt;p>Буде створено об&amp;rsquo;єкт з назвою Object1. Його потрібно одразу перейменувати. Рекомендується до назви додавати префікс, тому що якщо у нас буде об&amp;rsquo;єкт з назвою hero і ми захочемо додати спрайт який теж буде називатись hero отримаємо помилку що файл з такою назвою вже існує. Тому кожен об&amp;rsquo;єкт має мати префікс obj_. Таким чином об&amp;rsquo;єкт який я створю буде називатись obj_vars.&lt;/p>
&lt;p>Після створення об&amp;rsquo;єкт одразу відкриється. Тут можна вказати спрайт для об&amp;rsquo;єкта, вказати чи він буде видимим та ще декілька опцій. Зараз нас цікавить вікно events. Саме тут ми будемо писати код який керуватиме нашим об&amp;rsquo;єктом.&lt;/p>
&lt;p>&lt;img src="https://mpostument.com/game_maker/object_params.jpg" alt="Object_params">&lt;/p>
&lt;p>Натиснемо кнопку &lt;code>Add Event&lt;/code> та оберемо &lt;code>Create&lt;/code>. Event типу &lt;code>Create&lt;/code> викликається в момент створення об&amp;rsquo;єкту і тут зручно задавати якісь початкові характеристики. Натиснемо два рази лівою кнопкою миші щоб відкрити редактор коду.&lt;/p>
&lt;p>&lt;img src="https://mpostument.com/game_maker/create.jpg" alt="create">&lt;/p>
&lt;h2 id="local-variables">Local Variables&lt;/h2>
&lt;p>В редакторі створимо параметрів &lt;code>heroExp&lt;/code> який буде відповідати за досвід нашого об&amp;rsquo;єкта. Цей параметри бути типу integer. Також додамо параметр &lt;code>heroName&lt;/code> який буде типу string, і параметр &lt;code>heroAlive&lt;/code> який буде типу bool&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>heroExp &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">50&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>heroName &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Maksym&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>heroAlive &lt;span style="color:#f92672">=&lt;/span> true
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Тепер додамо інший тип event який називається draw. Він відповідає за відображення об&amp;rsquo;єкту. Для цього знову натиснемо &lt;code>Add Event&lt;/code> і в списку оберемо Draw -&amp;gt; Draw. Відкрию редактор для цього типу події і в коді напишу наступне&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>draw_text(&lt;span style="color:#ae81ff">20&lt;/span>, &lt;span style="color:#ae81ff">20&lt;/span>, heroExp)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>draw_text(&lt;span style="color:#ae81ff">20&lt;/span>, &lt;span style="color:#ae81ff">40&lt;/span>, heroName)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>draw_text(&lt;span style="color:#ae81ff">20&lt;/span>, &lt;span style="color:#ae81ff">60&lt;/span>, heroAlive)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>draw_text&lt;/code> функція використовується для відображення тексту, перші два параметри це координати x так y, і третій параметр це текст який потрібно відобразити. Добавимо тепер наш об&amp;rsquo;єкт в кімнату і спробуємо і подивимось що буде.&lt;/p>
&lt;h2 id="add-object-to-room">Add object to room&lt;/h2>
&lt;p>В &lt;code>Assets Browser&lt;/code> потрібно відкрити теку &lt;code>Rooms&lt;/code> і два рази натиснути мишкою на &lt;code>Room1&lt;/code>. Відкриється вікно кімнати. В верху зліва має бути обрано &lt;code>Instances&lt;/code> для того щоб можна було додавати об&amp;rsquo;єкти в кімнату. Тепер наш об&amp;rsquo;єкт можна просто перетягнути в кімнату. Також варто поміняти колір фону для того щоб було видно текст який відобразить нащ об&amp;rsquo;єкт. Для цього в опціях кімнати потрібно вибрати &lt;code>Background&lt;/code> і вибрати колір (опція Colour). Я вибрав чорний колір, так як текст буде біло кольору.&lt;/p>
&lt;p>&lt;img src="https://mpostument.com/game_maker/room_params.jpg" alt="room_params">&lt;/p>
&lt;p>Тепер коли все готово натиснемо F5 щоб запустити гру.&lt;/p>
&lt;p>&lt;img src="https://mpostument.com/game_maker/var_output.jpg" alt="var_print">&lt;/p>
&lt;h2 id="dynamically-change-variables-value">Dynamically change variables value&lt;/h2>
&lt;p>Спробуємо тепер додати event який буде змінювати значення наших параметрів. Додамо event &lt;code>Key Press - Up&lt;/code> який буде викликатись кожен раз як буде натиснута кнопка &lt;code>Up&lt;/code> на клавіатурі і event &lt;code>Key Press - Space&lt;/code>. Кнопка up буде додавати досвід нашому об&amp;rsquo;єкту а кнопка space буде вбивати наш об&amp;rsquo;єкт.&lt;/p>
&lt;p>В код &lt;code>Key Press - Up&lt;/code> додамо наступне&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>heroExp&lt;span style="color:#f92672">++&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>А в &lt;code>Key Press - Space&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>heroAlive &lt;span style="color:#f92672">=&lt;/span> false
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>І запустимо гру. Якщо натиснути &lt;code>Up&lt;/code> чи &lt;code>Space&lt;/code> то параметри будуть змінені.&lt;/p>
&lt;h2 id="global-vars">Global Vars&lt;/h2>
&lt;p>Локальні параметри доступні тільки в межах одного об&amp;rsquo;єкту. Якщо потрібно додати параметр до якого буде мати доступ усі об&amp;rsquo;єкти то перед назвою параметра потрібно додати &lt;code>global.&lt;/code>. Наприклад&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">global&lt;/span>&lt;span style="color:#f92672">.&lt;/span>heroAlive &lt;span style="color:#f92672">=&lt;/span> true
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>і тепер цей параметр можна змінювати або використовувати в інших об&amp;rsquo;єктах&lt;/p>
&lt;h2 id="video">Video&lt;/h2>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube.com/embed/0yEsno2nMbE" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div></content></item></channel></rss>
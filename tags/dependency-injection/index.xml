<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Dependency Injection on mpostument.com</title><link>/tags/dependency-injection/</link><description>Recent content in Dependency Injection on mpostument.com</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 07 Oct 2020 21:15:25 +0300</lastBuildDate><atom:link href="/tags/dependency-injection/index.xml" rel="self" type="application/rss+xml"/><item><title>Blazor Dependency Injection</title><link>/2020/10/07/blazor-dependency-injection/</link><pubDate>Wed, 07 Oct 2020 21:15:25 +0300</pubDate><guid>/2020/10/07/blazor-dependency-injection/</guid><description>Hi!
Today we will talk about how dependency injection works in blazor server. If you are familiar with dependency injection in asp.net core then there are no differences.
Dependency injection is configured in Startup.cs at the root of the project. After creating the project, it will look like this
public void ConfigureServices(IServiceCollection services) { services.AddRazorPages(); services.AddServerSideBlazor(); services.AddSingleton&amp;lt;WeatherForecastService&amp;gt;(); } Let&amp;rsquo;s see what happens here. services.AddRazorPages() - adds razor pages support to the project services.</description></item></channel></rss>
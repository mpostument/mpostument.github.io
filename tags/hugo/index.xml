<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Hugo on Maksym Postument</title><link>https://mpostument.com/tags/hugo/</link><description>Recent content in Hugo on Maksym Postument</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 02 Nov 2020 16:19:52 +0200</lastBuildDate><atom:link href="https://mpostument.com/tags/hugo/index.xml" rel="self" type="application/rss+xml"/><item><title>Custom Dns for Github Pages</title><link>https://mpostument.com/programming/ci/custom-dns-for-github-pages-copy/</link><pubDate>Mon, 02 Nov 2020 16:19:52 +0200</pubDate><guid>https://mpostument.com/programming/ci/custom-dns-for-github-pages-copy/</guid><description>Hello!
Today I want to show how you can add custom DNS for the GithubPages site.
This requires a few steps. Let&amp;rsquo;s start with domain name registration. I chose Namecheap to register my domain name. Open Namecheap website and in the search you need to enter the name you want to buy. Once you found what you are looking for and add it to your card.
It says Taken next to my domain name because I already bought it.</description><content>&lt;p>Hello!&lt;/p>
&lt;p>Today I want to show how you can add custom DNS for the GithubPages site.&lt;br>
This requires a few steps. Let&amp;rsquo;s start with domain name registration. I chose &lt;a href="https://www.namecheap.com/">Namecheap&lt;/a> to register my domain name.
Open Namecheap website and in the search you need to enter the name you want to buy. Once you found what you are looking for and add it to your card.&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/J1e9EI6.png" alt="Namecheap">&lt;/p>
&lt;p>It says &lt;code>Taken&lt;/code> next to my domain name because I already bought it.&lt;/p>
&lt;p>Once the domain name is purchased you need to go to your profile and click &lt;code>Manage&lt;/code>.&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/nUFrMWl.png" alt="NamecheapDns">&lt;/p>
&lt;p>In the &lt;code>Advanced DNS&lt;/code> section, I will add some records according to the Github documentation. Current addresses can also be found in &lt;a href="https://docs.github.com/en/free-pro-team@latest/github/working-with-github-pages/managing-a-custom-domain-for-your-github-pages-site">documentation&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/AeXmmxb.png" alt="Dns">&lt;/p>
&lt;p>List of A records to create:&lt;/p>
&lt;ul>
&lt;li>185.199.108.153&lt;/li>
&lt;li>185.199.109.153&lt;/li>
&lt;li>185.199.110.153&lt;/li>
&lt;li>185.199.111.153&lt;/li>
&lt;/ul>
&lt;p>You also need to create a CNAME that will point to the GitHub Pages url. In my case it is &lt;code>mpostument.github.io&lt;/code>.&lt;/p>
&lt;p>The next step is to add a file named CNAME to the root of the GitHub Pages repository. In the first line of this file you need to write a new domain name, for me it is &lt;code>mpostument.com&lt;/code>. I use a static site generator Hugo with Github Actions (You can read about it in my previous &lt;a href="https://mpostument.com/2020/10/21/deploy-hugo-with-github-actions-and-pages/">programming&lt;/a>). In order for CNAME to get to the root after deployment, it must be placed in the static folder.&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/6zaK6Q1.png" alt="CNAME">&lt;/p>
&lt;p>The last step is to specify a new domain name in the GitHub Pages repository settings. To do this, open the repository and click &lt;code>Settings&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/yXAnZ0q.png" alt="Settings">&lt;/p>
&lt;p>And find the section responsible for GitHub Pages. In the Custom domain field, specify your value and click Save. The Enforce HTTPS option will be available within 24 hours, I recommend that you also enable it.&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/PE502gk.png" alt="PagesSetting">&lt;/p>
&lt;p>And now after going to &lt;code>mpostument.github.io&lt;/code> you will be immediately redirected to &lt;code>mpostument.com&lt;/code>&lt;/p></content></item><item><title>Deploy Hugo With Github Actions and Pages</title><link>https://mpostument.com/programming/ci/deploy-hugo-with-github-actions-and-pages/</link><pubDate>Wed, 21 Oct 2020 20:19:26 +0300</pubDate><guid>https://mpostument.com/programming/ci/deploy-hugo-with-github-actions-and-pages/</guid><description>Hello!
I want to show how you can deploy a hugo website in GitHub Pages using github actions. That&amp;rsquo;s how I build my site.
Install Hugo Hugo can be downloaded from GitHub. Put the binary in the desired location.
GitHub setup In github you need to create two repositories, one is for .md files and the theme (content-mpostument in my case) and another will be used for GitHub Pages in which will be stored generated website with hugo (mpostument.</description><content>&lt;p>Hello!&lt;/p>
&lt;p>I want to show how you can deploy a hugo website in GitHub Pages using github actions. That&amp;rsquo;s how I build my site.&lt;/p>
&lt;h2 id="install-hugo">Install Hugo&lt;/h2>
&lt;p>Hugo can be downloaded from &lt;a href="https://github.com/gohugoio/hugo/releases">GitHub&lt;/a>. Put the binary in the desired location.&lt;/p>
&lt;h2 id="github-setup">GitHub setup&lt;/h2>
&lt;p>In github you need to create two repositories, one is for .md files and the theme (content-mpostument in my case) and another will be used for GitHub Pages in which will be stored generated website with hugo (mpostument.github.io).&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/GnsuIEm.png" alt="Repository">&lt;/p>
&lt;p>Code will be deployed to &lt;code>mpostument.github.io&lt;/code> repository via github actions. No manual changes allowed here.&lt;/p>
&lt;p>Create new site with hugo. Hugo will create a new directory with the site name. After directory is created initialize empty git project and connect it with github repository&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>hugo new site hugodemo
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd hugodemo
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git init
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git remote add origin git@github.com:mpostument/content-mpostument.git
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now you need to choose a theme for the site. Themes can be reviewed at &lt;a href="https://themes.gohugo.io/">themes.gohugo&lt;/a>&lt;/p>
&lt;p>I chose &lt;a href="https://github.com/panr/hugo-theme-terminal/">Terminal&lt;/a> theme for my site . The theme can be downloaded and unpacked in the &lt;code>themes&lt;/code> folder or added as a submodule. I will add as a submodule to always have the latest version of the theme.&lt;/p>
&lt;p>&lt;code>git submodule add https://github.com/panr/hugo-theme-terminal.git themes/terminal&lt;/code>.&lt;/p>
&lt;p>Usually, each theme has an example configuration file. I will copy it from the github theme page and save it in the &lt;code>config.toml&lt;/code> file. You can adjust it to your needs.&lt;/p>
&lt;p>Now you can start the site and see how it will look like &lt;code>hugo serve -D&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/yFdQHA5.png" alt="HugoExample">&lt;/p>
&lt;h2 id="github-actions">Github Actions&lt;/h2>
&lt;p>For GitHub actions to work, at the root of the repository, you need to create a folder &lt;code>.github/workflows&lt;/code> in which you create a yml configuration file for Github Actions.&lt;/p>
&lt;p>In the &lt;code>on&lt;/code> section, I specify to run the build only on push to the master branch.&lt;/p>
&lt;p>In &lt;code>steps&lt;/code> I call several actions in order. The pipeline begins with cloning the repository. After that, I call &lt;code>git submodule update --init --recursive&lt;/code> to update the theme using submodule. The next step is to install the required version of hugo and call &lt;code>hugo --minify&lt;/code> to generate a static site from .md files and theme. And the last step is to deploy content from the &lt;code>./Public&lt;/code> directory. Directory is created after executing the command &lt;code>hugo --minify&lt;/code>. As parameters, you also need to pass the git username, email, branch and repository to which do deployment.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yml" data-lang="yml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">CI&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">on&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">push&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">branches&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">master&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">jobs&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">deploy&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">runs-on&lt;/span>: &lt;span style="color:#ae81ff">ubuntu-18.04&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">steps&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Git checkout&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">uses&lt;/span>: &lt;span style="color:#ae81ff">actions/checkout@v2.3.3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Update theme&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">run&lt;/span>: &lt;span style="color:#ae81ff">git submodule update --init --recursive&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Setup hugo&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">uses&lt;/span>: &lt;span style="color:#ae81ff">peaceiris/actions-hugo@v2.4.13&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">with&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">hugo-version&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;0.76.5&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Build&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">run&lt;/span>: &lt;span style="color:#ae81ff">hugo --minify&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Deploy&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">uses&lt;/span>: &lt;span style="color:#ae81ff">peaceiris/actions-gh-pages@v3.7.3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">with&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">personal_token&lt;/span>: &lt;span style="color:#ae81ff">${{ secrets.GH_TOKEN }}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">external_repository&lt;/span>: &lt;span style="color:#ae81ff">mpostument/mpostument.github.io&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">publish_dir&lt;/span>: &lt;span style="color:#ae81ff">./public&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">user_name&lt;/span>: &lt;span style="color:#ae81ff">mpostument&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">user_email&lt;/span>: &lt;span style="color:#ae81ff">777rip777@gmail.com&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">publish_branch&lt;/span>: &lt;span style="color:#ae81ff">master&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now it can be committed to the github repository. Merge to the master branch will start build.&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/1Vfl3A8.png" alt="ActionBuild">&lt;/p>
&lt;p>As soon as the build passed, the new files should immediately appear in the Github Pages repository &lt;code>mpostument.github.io&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/emHfquj.png" alt="DeployStatus">&lt;/p>
&lt;p>In a few minutes, the website will be available at &lt;code>mpostument.github.io&lt;/code>&lt;/p></content></item></channel></rss>